{
  "version": 3,
  "sources": ["../bundle-tgfqGr/checked-fetch.js", "../bundle-tgfqGr/strip-cf-connecting-ip-header.js", "../../../functions/api/db/%5Baction%5D/%5Btable%5D.js", "../../../functions/cdn-cgi/speculation/speculation.js", "../../../functions/api/worker-chat.js", "../../../functions/api/chat.js", "../../../functions/api/worker-glm.js", "../../../functions/api/chat-glm.js", "../../../functions/api/ninjas.js", "../../../functions/api/tts.js", "../../../functions/api/tts-dialog.js", "../../../functions/_middleware/catch_all.js", "../../../functions/_middleware/headers.js", "../../../functions/_middleware/speculation.js", "../../../functions/api/env.js", "../../../functions/api/glm-route.js", "../../../functions/api/route.js", "../../../functions/api/tts-dialog-route.js", "../../../functions/api/tts-route.js", "../../../functions/cdn-cgi/rum.js", "../../../functions/cdn-cgi/speculation.js", "../../../functions/%5B%5Bpath%5D%5D.js", "functionsRoutes-0.39952630749780593.mjs", "../bundle-tgfqGr/middleware-loader.entry.ts", "../bundle-tgfqGr/middleware-insertion-facade.js", "file:///C:/Users/45333/AppData/Roaming/npm/node_modules/wrangler/templates/pages-template-worker.ts", "file:///C:/Users/45333/AppData/Roaming/npm/node_modules/wrangler/node_modules/path-to-regexp/src/index.ts", "file:///C:/Users/45333/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "file:///C:/Users/45333/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "file:///C:/Users/45333/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "D:\\Alex\\study-assist\\study-assist\\.wrangler\\tmp\\pages-s9pHkz\\functionsWorker-0.7988946158507118.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "export async function onRequest(context) {\r\n    // Handle CORS preflight requests\r\n    if (context.request.method === \"OPTIONS\") {\r\n        return new Response(null, {\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n                \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n            },\r\n        });\r\n    }\r\n\r\n    try {\r\n        // Get database parameter from query string or request body\r\n        const url = new URL(context.request.url);\r\n        const databaseParam = url.searchParams.get('database') || 'default';\r\n        \r\n        let db;\r\n        if (databaseParam === 'db_gore') {\r\n            if (!context.env.DB_GORE) {\r\n                throw new Error('Database binding \"DB_GORE\" not found. Please check your Cloudflare Pages D1 database bindings.');\r\n            }\r\n            db = context.env.DB_GORE;\r\n        } else if (databaseParam === 'ws-hub-db') {\r\n            if (!context.env.DB_WS_HUB) {\r\n                throw new Error('Database binding \"DB_WS_HUB\" not found. Please check your Cloudflare Pages D1 database bindings.');\r\n            }\r\n            db = context.env.DB_WS_HUB;\r\n        } else {\r\n            if (!context.env.DB) {\r\n                throw new Error('Database binding \"DB\" not found. Please check your Cloudflare Pages D1 database bindings.');\r\n            }\r\n            db = context.env.DB;\r\n        }\r\n\r\n        // Get the action and table from the URL parameters\r\n        const { action, table } = context.params;\r\n\r\n        // Validate table name to prevent SQL injection\r\n        const validTables = ['chinese_dynasty', 'quote', \"vocabulary\", \"chinese_poem\", \"english_dialog\", \"world_history\", \"lab_warehouse\", \"fa_svg\", \"country_info\", \"equipment_basic_info\", \"personnel_list\"]; // Add more tables as needed\r\n        if (!validTables.includes(table)) {\r\n            throw new Error(\"Invalid table name\");\r\n        }\r\n\r\n        // Handle different actions\r\n        switch (action) {\r\n            case 'test':\r\n                // Test connection for specific table\r\n                const testResult = await db.prepare(`SELECT 1 FROM ${table} LIMIT 1`).first();\r\n                const url = new URL(context.request.url);\r\n                const databaseName = url.searchParams.get('database') || 'default';\r\n                return new Response(JSON.stringify({\r\n                    success: true,\r\n                    message: `Successfully connected to ${table} table!`,\r\n                    table: table,\r\n                    database: databaseName\r\n                }), {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                    },\r\n                });\r\n\r\n            case 'query':\r\n                // Query table data\r\n                const queryResult = await db.prepare(`\r\n                    SELECT * FROM ${table}\r\n                `).all();\r\n\r\n                return new Response(JSON.stringify({\r\n                    success: true,\r\n                    table: table,\r\n                    data: queryResult.results || []\r\n                }), {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                    },\r\n                });\r\n\r\n            case 'upload':\r\n                // Handle data upload\r\n                if (context.request.method !== 'POST') {\r\n                    throw new Error('Upload requires POST method');\r\n                }\r\n\r\n                // Parse the request body\r\n                const { data, database } = await context.request.json();\r\n                if (!Array.isArray(data) || data.length === 0) {\r\n                    throw new Error('Invalid data format. Expected non-empty array.');\r\n                }\r\n\r\n                let insertedCount = 0;\r\n                let deletedCount = 0;\r\n\r\n                // Use D1's JavaScript transaction API\r\n                try {\r\n                    // Then insert new data\r\n                    if (table === 'chinese_dynasty') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO chinese_dynasty (Number, Dynasty, Period, Title, Event)\r\n                                VALUES (?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.Number || null,\r\n                                row.Dynasty || null,\r\n                                row.Period || null,\r\n                                row.Title || null,\r\n                                row.Event || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'quote') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO quote (Number, Type, Chinese, English, Remark_1, Remark_2)\r\n                                VALUES (?, ?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.Number || null,\r\n                                row.Type || null,\r\n                                row.Chinese || null,\r\n                                row.English || null,\r\n                                row.Remark_1 || null,\r\n                                row.Remark_2 || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'world_history') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO world_history (CATEGORY, REGION, PERIOD, SUB_CATEGORY_1, SUB_CATEGORY_2, TITLE, BACKGROUND, EVENT, IMPACT, REMARK_1, REMARK_2, REMARK_3)\r\n                                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.CATEGORY || null,\r\n                                row.REGION || null,\r\n                                row.PERIOD || null,\r\n                                row.SUB_CATEGORY_1 || null,\r\n                                row.SUB_CATEGORY_2 || null,\r\n                                row.TITLE || null,\r\n                                row.BACKGROUND || null,\r\n                                row.EVENT || null,\r\n                                row.IMPACT || null,\r\n                                row.REMARK_1 || null,\r\n                                row.REMARK_2 || null,\r\n                                row.REMARK_3 || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'chinese_poem') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO chinese_poem (Title, Number, Poem, Remark_1, Remark_2, Remark_3, Author, Dynasty)\r\n                                VALUES (?, ?, ?, ?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.Title || null,\r\n                                row.Number || null,\r\n                                row.Poem || null,\r\n                                row.Remark_1 || null,\r\n                                row.Remark_2 || null,\r\n                                row.Remark_3 || null,\r\n                                row.Author || null,\r\n                                row.Dynasty || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'fa_svg') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO fa_svg (Name, Category, Path)\r\n                                VALUES (?, ?, ?)\r\n                            `).bind(\r\n                                row.Name || null,\r\n                                row.Category || null,\r\n                                row.Path || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'country_info') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO country_info (Country_Code_Fips_10, Factbook_File_Path, Country_Code_Alpha2, Continent_Eng, Country_Name_Eng, Continent_Chn, Country_Name_Chn, Flag_SVG, Other1, Other2, Other3)\r\n                                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.Country_Code_Fips_10 || null,\r\n                                row.Factbook_File_Path || null,\r\n                                row.Country_Code_Alpha2 || null,\r\n                                row.Continent_Eng || null,\r\n                                row.Country_Name_Eng || null,\r\n                                row.Continent_Chn || null,\r\n                                row.Country_Name_Chn || null,\r\n                                row.Flag_SVG || null,\r\n                                row.Other1 || null,\r\n                                row.Other2 || null,\r\n                                row.Other3 || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'vocabulary') {\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO vocabulary (\r\n                                    Word_Rank, Word, Word_ID, US_Pronunciation, UK_Pronunciation, \r\n                                    US_Speech, UK_Speech, Translations, Synonyms, Example_Sentences, \r\n                                    Remark_1, Remark_2, Remark_3, Remark_4, Remark_5\r\n                                )\r\n                                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.Word_Rank || null,\r\n                                row.Word || null,\r\n                                row.Word_ID || null,\r\n                                row.US_Pronunciation || null,\r\n                                row.UK_Pronunciation || null,\r\n                                row.US_Speech || null,\r\n                                row.UK_Speech || null,\r\n                                row.Translations || null,\r\n                                row.Synonyms || null,\r\n                                row.Example_Sentences || null,\r\n                                row.Remark_1 || null,\r\n                                row.Remark_2 || null,\r\n                                row.Remark_3 || null,\r\n                                row.Remark_4 || null,\r\n                                row.Remark_5 || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'lab_warehouse') {\r\n                        // First, clear existing data from the table\r\n                        const deleteResult = await db.prepare(`DELETE FROM ${table}`).run();\r\n                        deletedCount = deleteResult.meta.changes || 0;\r\n\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO lab_warehouse (\r\n                                    \u626B\u63CF\u5355, \u8D27\u4F4D, \u6761\u7801, \u6570\u91CF, \u54C1\u540D, \u72B6\u6001, \u5355\u4F4D, \u4EF7\u683C, \u54C1\u724C, \u4EA7\u5730, \u65F6\u95F4, \u4F5C\u4E1A\u8005, \u5176\u4ED61, \u5176\u4ED62, \u5176\u4ED63, \u5176\u4ED64, \u5176\u4ED65, \u5176\u4ED66, \u5176\u4ED67, \u5176\u4ED68\r\n                                )\r\n                                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.\u626B\u63CF\u5355 || null,\r\n                                row.\u8D27\u4F4D || null,\r\n                                row.\u6761\u7801 || null,\r\n                                row.\u6570\u91CF || null,\r\n                                row.\u54C1\u540D || null,\r\n                                row.\u72B6\u6001 || null,\r\n                                row.\u5355\u4F4D || null,\r\n                                row.\u4EF7\u683C || null,\r\n                                row.\u54C1\u724C || null,\r\n                                row.\u4EA7\u5730 || null,\r\n                                row.\u65F6\u95F4 || null,\r\n                                row.\u4F5C\u4E1A\u8005 || null,\r\n                                row.\u5176\u4ED61 || null,\r\n                                row.\u5176\u4ED62 || null,\r\n                                row.\u5176\u4ED63 || null,\r\n                                row.\u5176\u4ED64 || null,\r\n                                row.\u5176\u4ED65 || null,\r\n                                row.\u5176\u4ED66 || null,\r\n                                row.\u5176\u4ED67 || null,\r\n                                row.\u5176\u4ED68 || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'equipment_basic_info') {\r\n                        // First, clear existing data from the table\r\n                        const deleteResult = await db.prepare(`DELETE FROM ${table}`).run();\r\n                        deletedCount = deleteResult.meta.changes || 0;\r\n\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO equipment_basic_info (plant, equipment, area, sub_area)\r\n                                VALUES (?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.plant || null,\r\n                                row.equipment || null,\r\n                                row.area || null,\r\n                                row.sub_area || null\r\n                            );\r\n                        }));\r\n                    } else if (table === 'personnel_list') {\r\n                        // First, clear existing data from the table\r\n                        const deleteResult = await db.prepare(`DELETE FROM ${table}`).run();\r\n                        deletedCount = deleteResult.meta.changes || 0;\r\n\r\n                        await db.batch(data.map(row => {\r\n                            return db.prepare(`\r\n                                INSERT INTO personnel_list (plant, name, function, commitment)\r\n                                VALUES (?, ?, ?, ?)\r\n                            `).bind(\r\n                                row.plant || null,\r\n                                row.name || null,\r\n                                row.function || null,\r\n                                row.commitment || null\r\n                            );\r\n                        }));\r\n                    }\r\n\r\n                    insertedCount = data.length;\r\n\r\n                    return new Response(JSON.stringify({\r\n                        success: true,\r\n                        message: `Data uploaded successfully. Cleared ${deletedCount} existing records and inserted ${insertedCount} new records.`,\r\n                        insertedCount,\r\n                        deletedCount,\r\n                        totalRows: insertedCount\r\n                    }), {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                        },\r\n                    });\r\n                } catch (error) {\r\n                    throw new Error(`Upload failed: ${error.message}`);\r\n                }\r\n\r\n            default:\r\n                throw new Error(`Unsupported action: ${action}`);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"Database error:\", error);\r\n        return new Response(\r\n            JSON.stringify({ \r\n                success: false,\r\n                error: error.message,\r\n                details: \"If you're seeing a database binding error, please ensure the D1 database is properly bound in your Cloudflare Pages settings.\"\r\n            }), \r\n            {\r\n                status: 500,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n            }\r\n        );\r\n    }\r\n}", "// Handle Speculation-Rules request at the correct path\r\nexport function onRequest(context) {\r\n  return new Response(JSON.stringify({\r\n    // Empty rules set to prevent 404 errors\r\n    prefetch: [{ source: \"list\", urls: [] }],\r\n    prerender: [{ source: \"list\", urls: [] }]\r\n  }), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"public, max-age=3600\"\r\n    }\r\n  });\r\n} ", "// Text Generation Functions\r\nconst DS_URL = \"https://chat-api.study-llm.me\";\r\n\r\n// Define the function to be exported\r\nasync function workerChatOutput(prompt, env) {\r\n    try {\r\n        // Validate input\r\n        if (!prompt || prompt.trim() === '') {\r\n            throw new Error('Please enter a valid prompt');\r\n        }\r\n\r\n        // Get API key from environment\r\n        const DS_KEY = env.DEEPSEEK_API_KEY;\r\n        if (!DS_KEY) {\r\n            throw new Error('API key not configured');\r\n        }\r\n\r\n        // Log the request details\r\n        console.log('Sending request with prompt:', prompt.trim());\r\n        console.log('Request URL:', DS_URL);\r\n\r\n        const response = await fetch(DS_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${DS_KEY}`\r\n            },\r\n            body: JSON.stringify({\r\n                messages: [{\r\n                    role: \"user\",\r\n                    content: prompt.trim()\r\n                }],\r\n                temperature: 0.7,\r\n                max_tokens: 2000\r\n            })\r\n        });\r\n\r\n        // Log the response status\r\n        console.log('Response status:', response.status);\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json().catch(() => ({}));\r\n            throw new Error(errorData.message || `HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        \r\n        // Log the raw response\r\n        console.log('Raw API response:', result);\r\n        \r\n        // Format the response based on the API structure\r\n        if (result.choices && result.choices[0]?.message?.content) {\r\n            return result.choices[0].message.content;\r\n        } else if (result.message) {\r\n            // Return the message content if it's in the expected format\r\n            return result.message;\r\n        }\r\n        return JSON.stringify(result, null, 2);\r\n    } catch (error) {\r\n        console.error('Worker call error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Export for ES modules (Cloudflare Workers/Vercel)\r\nexport { workerChatOutput };", "// Import the workerChatOutput function\r\nimport { workerChatOutput } from './worker-chat.js';\r\n\r\n// Handle chat requests to DeepSeek API\r\nexport async function onRequestPost(context) {\r\n  try {\r\n    const { request, env } = context;\r\n    \r\n    // Get request body\r\n    let body;\r\n    try {\r\n      body = await request.json();\r\n    } catch (e) {\r\n      return new Response(JSON.stringify({ \r\n        error: \"Invalid JSON in request body\",\r\n        message: e.message\r\n      }), {\r\n        status: 400,\r\n        headers: { \r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Check for different request formats\r\n    if (body.prompt) {\r\n      // Worker-chat format - single prompt\r\n      try {\r\n        // Call the workerChatOutput function with the prompt and env\r\n        const output = await workerChatOutput(body.prompt, env);\r\n        \r\n        // Return the response\r\n          return new Response(JSON.stringify({\r\n          output: output\r\n          }), {\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n              \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n            }\r\n          });\r\n      } catch (error) {\r\n          return new Response(JSON.stringify({\r\n          error: \"Error generating response\",\r\n          message: error.message\r\n          }), {\r\n          status: 500,\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }\r\n        });\r\n      }\r\n    } else if (body.messages && Array.isArray(body.messages)) {\r\n      // Original DeepSeek API format - messages array\r\n      try {\r\n        // Get API key from environment\r\n        const DS_KEY = env.DEEPSEEK_API_KEY;\r\n        if (!DS_KEY) {\r\n          throw new Error('API key not configured');\r\n        }\r\n        \r\n        // Forward to DeepSeek API directly\r\n        const DS_URL = \"https://api.deepseek.com/v1/chat/completions\";\r\n        \r\n        const deepSeekResponse = await fetch(DS_URL, {\r\n          method: \"POST\",\r\n          headers: { \r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${DS_KEY}`\r\n          },\r\n          body: JSON.stringify({\r\n            model: \"deepseek-chat\",\r\n            messages: body.messages,\r\n            temperature: 0.7,\r\n            max_tokens: 2000\r\n          })\r\n        });\r\n        \r\n        if (!deepSeekResponse.ok) {\r\n          const errorData = await deepSeekResponse.json().catch(() => ({}));\r\n          throw new Error(errorData.message || `DeepSeek API error: ${deepSeekResponse.status}`);\r\n        }\r\n        \r\n        const result = await deepSeekResponse.json();\r\n        \r\n        // Return the original DeepSeek response format\r\n        return new Response(JSON.stringify(result), {\r\n          headers: { \r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n          }\r\n        });\r\n    } catch (error) {\r\n        return new Response(JSON.stringify({ \r\n          error: \"Error calling DeepSeek API\",\r\n          message: error.message\r\n        }), {\r\n          status: 500,\r\n          headers: { \r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      return new Response(JSON.stringify({ \r\n        error: \"Missing prompt or messages in request body\"\r\n      }), {\r\n        status: 400,\r\n        headers: { \r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    return new Response(JSON.stringify({ \r\n      error: \"Server error\",\r\n      message: error.message\r\n    }), {\r\n      status: 500,\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Handle OPTIONS requests for CORS\r\nexport function onRequestOptions() {\r\n  return new Response(null, {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n      \"X-Content-Type-Options\": \"nosniff\",\r\n      \"Cache-Control\": \"no-store\"\r\n    }\r\n  });\r\n}\r\n\r\n// Handle GET requests in the same function\r\nexport function onRequestGet() {\r\n  return new Response(JSON.stringify({\r\n    message: \"The chat API is working. Send POST requests to this endpoint to interact with the AI.\",\r\n    example: {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        messages: [\r\n          {role: \"system\", content: \"You are a helpful assistant\"},\r\n          {role: \"user\", content: \"Hello, how are you?\"}\r\n        ]\r\n      }, null, 2)\r\n    }\r\n  }), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n    }\r\n  });\r\n}\r\n", "// GLM Worker Output Function\r\n// This file provides the workerGlmOutput function for chat-glm.js\r\n\r\n// Performance constants\r\nconst REQUEST_TIMEOUT = 25000; // 25 seconds (adjusted to be within Cloudflare limits)\r\nconst MAX_TOKENS = 20000;\r\nconst TEMPERATURE = 0.7;\r\nconst CACHE_TTL = 60 * 1000; // 1 minute cache\r\n\r\n// Simple in-memory cache for identical requests\r\nconst requestCache = new Map();\r\n\r\n// Generate cache key from prompt\r\nfunction generateCacheKey(prompt) {\r\n  return prompt.trim();\r\n}\r\n\r\n// Optimized function to handle GLM API requests\r\nasync function workerGlmOutput(prompt, env) {\r\n  return await workerGlmOutputWithRetry(prompt, env);\r\n}\r\n\r\n// Retry mechanism for GLM API requests\r\nasync function workerGlmOutputWithRetry(prompt, env, maxRetries = 2) {\r\n  let lastError;\r\n  \r\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n    try {\r\n      return await workerGlmOutputInternal(prompt, env);\r\n    } catch (error) {\r\n      lastError = error;\r\n      console.warn(`GLM API attempt ${attempt} failed:`, error.message);\r\n      \r\n      // If it's a timeout error, retry immediately\r\n      if (error.message.includes('timeout') && attempt < maxRetries) {\r\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\r\n        continue;\r\n      }\r\n      \r\n      // If it's a 5xx error, wait and retry\r\n      if (error.status >= 500 && error.status < 600 && attempt < maxRetries) {\r\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds\r\n        continue;\r\n      }\r\n      \r\n      // Other errors don't retry\r\n      break;\r\n    }\r\n  }\r\n  \r\n  throw lastError;\r\n}\r\n\r\n// Internal function for actual GLM API call\r\nasync function workerGlmOutputInternal(prompt, env) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Get API key from environment\r\n    const GLM_KEY = env.GLM_API_KEY;\r\n    if (!GLM_KEY) {\r\n      const error = new Error('GLM API key is not configured');\r\n      error.troubleshooting_tips = [\r\n        'Check that GLM_API_KEY environment variable is set',\r\n        'Verify the API key is valid and not expired',\r\n        'Contact your administrator if the issue persists'\r\n      ];\r\n      throw error;\r\n    }\r\n    \r\n    // GLM API endpoint\r\n    const GLM_URL = \"https://open.bigmodel.cn/api/paas/v4/chat/completions\";\r\n    \r\n    // Check cache for identical requests\r\n    const cacheKey = generateCacheKey(prompt);\r\n    \r\n    if (requestCache.has(cacheKey)) {\r\n      const cached = requestCache.get(cacheKey);\r\n      if (Date.now() - cached.timestamp < CACHE_TTL) {\r\n        console.log(`Worker GLM cache hit for prompt: ${cacheKey}`);\r\n        \r\n        const responseTime = Date.now() - startTime;\r\n        console.log(`Worker GLM (cached) completed in ${responseTime}ms`);\r\n        \r\n        return cached.data;\r\n      } else {\r\n        requestCache.delete(cacheKey);\r\n      }\r\n    }\r\n    \r\n    // Create messages array from prompt\r\n    const messages = [{\r\n      role: \"user\",\r\n      content: prompt.trim()\r\n    }];\r\n    \r\n    console.log('Sending GLM request with prompt:', prompt);\r\n    \r\n    // Create AbortController for timeout\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), REQUEST_TIMEOUT);\r\n    \r\n    try {\r\n      const response = await fetch(GLM_URL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${GLM_KEY}`,\r\n          \"User-Agent\": \"GLM-Worker/1.0\"\r\n        },\r\n        body: JSON.stringify({\r\n          model: \"glm-4.5\",\r\n          messages: messages,\r\n          temperature: TEMPERATURE,\r\n          max_tokens: MAX_TOKENS\r\n        }),\r\n        signal: controller.signal,\r\n        // Performance optimizations\r\n        cf: {\r\n          connectTimeout: 5000,\r\n          readTimeout: 10000\r\n        }\r\n      });\r\n      \r\n      clearTimeout(timeoutId);\r\n      \r\n      console.log('GLM Response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        const responseTime = Date.now() - startTime;\r\n        \r\n        console.error(`Worker GLM API error: ${response.status} - ${JSON.stringify(errorData)}`);\r\n        \r\n        const error = new Error(errorData.error?.message || errorData.message || `GLM API error: ${response.status}`);\r\n        error.status = response.status;\r\n        error.response_time = `${responseTime}ms`;\r\n        error.troubleshooting_tips = [\r\n          'Check your API key is valid and has sufficient credits',\r\n          'Verify the request payload is correctly formatted',\r\n          'Try reducing the complexity of your prompt',\r\n          'Check if the GLM API service is experiencing issues'\r\n        ];\r\n        throw error;\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Raw GLM API response:', result);\r\n      \r\n      // Extract the content from the response\r\n      const content = result.choices?.[0]?.message?.content || \"No response from GLM\";\r\n      \r\n      // Cache the result\r\n      requestCache.set(cacheKey, {\r\n        data: content,\r\n        timestamp: Date.now()\r\n      });\r\n      \r\n      // Clean up cache if it gets too large\r\n      if (requestCache.size > 100) {\r\n        const oldestKey = requestCache.keys().next().value;\r\n        requestCache.delete(oldestKey);\r\n      }\r\n      \r\n      const responseTime = Date.now() - startTime;\r\n      console.log(`Worker GLM completed in ${responseTime}ms`);\r\n      \r\n      return content;\r\n    } catch (fetchError) {\r\n      clearTimeout(timeoutId);\r\n      \r\n      if (fetchError.name === 'AbortError') {\r\n        console.error('Worker GLM request timeout');\r\n        const error = new Error(\"Request timeout\");\r\n        error.message = \"The request to the GLM API timed out\";\r\n        error.status = 408;\r\n        error.troubleshooting_tips = [\r\n          \"Try again with a shorter prompt\",\r\n          \"Check if the GLM API is experiencing high load\",\r\n          \"Reduce the complexity of your request\"\r\n        ];\r\n        throw error;\r\n      }\r\n      \r\n      throw fetchError;\r\n    }\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    console.error('GLM API call error:', error);\r\n    \r\n    // Add response time and troubleshooting tips if not already present\r\n    if (!error.response_time) {\r\n      error.response_time = `${responseTime}ms`;\r\n    }\r\n    \r\n    if (!error.troubleshooting_tips) {\r\n      error.troubleshooting_tips = [\r\n        'Check the server logs for more details',\r\n        'Verify all required environment variables are set',\r\n        'Try again later if the issue persists'\r\n      ];\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\n// Handle HTTP requests\r\nasync function onRequest(context) {\r\n  const { request, env } = context;\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Handle OPTIONS method for CORS preflight requests\r\n    if (request.method === 'OPTIONS') {\r\n      return new Response(null, {\r\n        status: 200,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n          \"Access-Control-Max-Age\": \"86400\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Only handle POST requests\r\n    if (request.method !== 'POST') {\r\n      return new Response(JSON.stringify({\r\n        error: \"Method not allowed\",\r\n        message: \"Only POST method is supported\",\r\n        troubleshooting_tips: [\r\n          \"Use POST method with JSON body\",\r\n          \"Include 'prompt' or 'messages' in your request\"\r\n        ]\r\n      }), {\r\n        status: 405,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Parse request body\r\n    let body;\r\n    try {\r\n      body = await request.json();\r\n    } catch (e) {\r\n      return new Response(JSON.stringify({\r\n        error: \"Invalid JSON\",\r\n        message: \"Request body must be valid JSON\",\r\n        troubleshooting_tips: [\r\n          \"Ensure Content-Type is application/json\",\r\n          \"Check JSON syntax for errors\"\r\n        ]\r\n      }), {\r\n        status: 400,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Extract prompt from request\r\n    const prompt = body.prompt || (body.messages && body.messages[0] && body.messages[0].content);\r\n    \r\n    if (!prompt) {\r\n      return new Response(JSON.stringify({\r\n        error: \"Missing prompt\",\r\n        message: \"Request must contain 'prompt' or 'messages' field\",\r\n        troubleshooting_tips: [\r\n          \"Include 'prompt' field in your request\",\r\n          \"Or include 'messages' array with user message\"\r\n        ]\r\n      }), {\r\n        status: 400,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Call the GLM API\r\n    try {\r\n      const result = await workerGlmOutput(prompt, env);\r\n      const responseTime = Date.now() - startTime;\r\n      \r\n      return new Response(JSON.stringify({\r\n        response: result,\r\n        prompt: prompt,\r\n        response_time: `${responseTime}ms`\r\n      }), {\r\n        status: 200,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n          \"X-Response-Time\": `${responseTime}ms`\r\n        }\r\n      });\r\n    } catch (glmError) {\r\n      const responseTime = Date.now() - startTime;\r\n      \r\n      return new Response(JSON.stringify({\r\n        error: glmError.message || \"GLM API error\",\r\n        details: glmError.toString(),\r\n        response_time: `${responseTime}ms`,\r\n        troubleshooting_tips: glmError.troubleshooting_tips || [\r\n          \"Check the GLM API configuration\",\r\n          \"Verify API key is valid\",\r\n          \"Try again later\"\r\n        ]\r\n      }), {\r\n        status: glmError.status || 500,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n          \"X-Response-Time\": `${responseTime}ms`\r\n        }\r\n      });\r\n    }\r\n    \r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    console.error('Error in worker-glm request handler:', error);\r\n    \r\n    return new Response(JSON.stringify({\r\n      error: \"Internal server error\",\r\n      message: error.message,\r\n      response_time: `${responseTime}ms`,\r\n      troubleshooting_tips: [\r\n        \"Check server logs for details\",\r\n        \"Verify all environment variables are set\",\r\n        \"Try again later\"\r\n      ]\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n        \"X-Response-Time\": `${responseTime}ms`\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Export for ES modules (Cloudflare Workers/Vercel)\r\nexport { workerGlmOutput, onRequest };", "// Import the workerGlmOutput function\r\nimport { workerGlmOutput } from './worker-glm.js';\r\n\r\n// Handle chat requests to GLM-4.5 API\r\nexport async function onRequestPost(context) {\r\n  try {\r\n    const { request, env } = context;\r\n    \r\n    // Get request body\r\n    let body;\r\n    try {\r\n      body = await request.json();\r\n    } catch (e) {\r\n      return new Response(JSON.stringify({ \r\n        error: \"Invalid JSON in request body\",\r\n        message: e.message\r\n      }), {\r\n        status: 400,\r\n        headers: { \r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Check for different request formats\r\n    if (body.prompt) {\r\n      // Worker-glm format - single prompt\r\n      try {\r\n        // Call the workerGlmOutput function with the prompt and env\r\n        const output = await workerGlmOutput(body.prompt, env);\r\n        \r\n        // Return the response\r\n          return new Response(JSON.stringify({\r\n          output: output\r\n          }), {\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n              \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n              \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n              \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n            }\r\n          });\r\n      } catch (error) {\r\n          return new Response(JSON.stringify({\r\n          error: \"Error generating GLM response\",\r\n          message: error.message\r\n          }), {\r\n          status: 500,\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://study-llm.me\"\r\n          }\r\n        });\r\n      }\r\n    } else if (body.messages && Array.isArray(body.messages)) {\r\n      // GLM API format - messages array\r\n      try {\r\n        // Get API key from environment\r\n        const GLM_KEY = env.GLM_API_KEY || env.DEEPSEEK_API_KEY;\r\n        if (!GLM_KEY) {\r\n          throw new Error('Neither GLM API key nor DeepSeek API key is configured');\r\n        }\r\n        \r\n        // Check if this is a streaming request\r\n        const isStreaming = body.stream === true;\r\n        \r\n        // Forward to GLM API directly\r\n        const GLM_URL = \"https://open.bigmodel.cn/api/paas/v4/chat/completions\";\r\n        \r\n        if (isStreaming) {\r\n          // Streaming response handling\r\n          const glmResponse = await fetch(GLM_URL, {\r\n            method: \"POST\",\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\": `Bearer ${GLM_KEY}`\r\n            },\r\n            body: JSON.stringify({\r\n              model: \"glm-4.5\",\r\n              messages: body.messages,\r\n              temperature: 0.7,\r\n              max_tokens: 2000,\r\n              stream: true\r\n            })\r\n          });\r\n          \r\n          if (!glmResponse.ok) {\r\n            const errorData = await glmResponse.json().catch(() => ({}));\r\n            throw new Error(errorData.error?.message || errorData.message || `GLM API error: ${glmResponse.status}`);\r\n          }\r\n          \r\n          // Return streaming response\r\n          return new Response(glmResponse.body, {\r\n            headers: {\r\n              \"Content-Type\": \"text/event-stream\",\r\n              \"Cache-Control\": \"no-cache\",\r\n              \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n              \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n              \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n            }\r\n          });\r\n        } else {\r\n          // Regular response handling\r\n          const glmResponse = await fetch(GLM_URL, {\r\n            method: \"POST\",\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\": `Bearer ${GLM_KEY}`\r\n            },\r\n            body: JSON.stringify({\r\n              model: \"glm-4.5\",\r\n              messages: body.messages,\r\n              temperature: 0.7,\r\n              max_tokens: 2000\r\n            })\r\n          });\r\n          \r\n          if (!glmResponse.ok) {\r\n            const errorData = await glmResponse.json().catch(() => ({}));\r\n            throw new Error(errorData.error?.message || errorData.message || `GLM API error: ${glmResponse.status}`);\r\n          }\r\n          \r\n          const result = await glmResponse.json();\r\n          \r\n          // Return the original GLM response format\r\n          return new Response(JSON.stringify(result), {\r\n            headers: { \r\n              \"Content-Type\": \"application/json\",\r\n              \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n              \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n              \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n            }\r\n          });\r\n        }\r\n    } catch (error) {\r\n        return new Response(JSON.stringify({ \r\n          error: \"Error calling GLM API\",\r\n          message: error.message\r\n        }), {\r\n          status: 500,\r\n          headers: { \r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://study-llm.me\"\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      return new Response(JSON.stringify({ \r\n        error: \"Missing prompt or messages in request body\"\r\n      }), {\r\n        status: 400,\r\n        headers: { \r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\"\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    return new Response(JSON.stringify({ \r\n      error: \"GLM Server error\",\r\n      message: error.message\r\n    }), {\r\n      status: 500,\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"https://study-llm.me\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Handle OPTIONS requests for CORS\r\nexport function onRequestOptions() {\r\n  return new Response(null, {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n      \"X-Content-Type-Options\": \"nosniff\",\r\n      \"Cache-Control\": \"no-store\"\r\n    }\r\n  });\r\n}\r\n\r\n// Handle GET requests in the same function\r\nexport function onRequestGet() {\r\n  return new Response(JSON.stringify({\r\n    message: \"The GLM-4.5 chat API is working. Send POST requests to this endpoint to interact with the AI.\",\r\n    example: {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        messages: [\r\n          {role: \"system\", content: \"You are a helpful assistant\"},\r\n          {role: \"user\", content: \"Hello, how are you?\"}\r\n        ]\r\n      }, null, 2)\r\n    }\r\n  }), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n    }\r\n  });\r\n}", "// functions/api/ninjas.js\r\nexport const onRequestOptions = async ({ request }) => {\r\n  // Optional CORS preflight support (adjust allowed origin as needed)\r\n  const headers = {\r\n    'Access-Control-Allow-Origin': '*',            // tighten in production\r\n    'Access-Control-Allow-Methods': 'GET,OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Content-Type',\r\n  };\r\n  return new Response(null, { headers });\r\n};\r\n\r\nexport const onRequestGet = async ({ request, env }) => {\r\n  const url = new URL(request.url);\r\n  const endpoint = url.searchParams.get('endpoint') || 'country';\r\n  \r\n  if (endpoint === 'countryflag') {\r\n    return handleCountryFlag(request, env);\r\n  }\r\n  \r\n  if (endpoint === 'advice') {\r\n    return handleAdvice(request, env);\r\n  }\r\n  \r\n  if (endpoint === 'horoscope') {\r\n    return handleHoroscope(request, env);\r\n  }\r\n  \r\n  return handleCountryData(request, env);\r\n};\r\n\r\nasync function handleCountryData(request, env) {\r\n  const url = new URL(request.url);\r\n  const name = url.searchParams.get('name') || '';\r\n  if (!name) {\r\n    return Response.json({ error: \"Missing 'name' query param\" }, { status: 400 });\r\n  }\r\n\r\n  // Build upstream request (per API Ninjas docs)\r\n  const upstream = new URL('https://api.api-ninjas.com/v1/country');\r\n  upstream.searchParams.set('name', name);\r\n\r\n  // (Optional) Edge cache: try to serve from Cloudflare cache first\r\n  const cacheKey = new Request(upstream.toString(), { headers: { 'X-Api-Key': 'omitted' } });\r\n  const cache = caches.default; // Cloudflare Cache API\r\n  let cached = await cache.match(cacheKey);\r\n  if (cached) return cached; // cache hit\r\n\r\n  const res = await fetch(upstream.toString(), {\r\n    headers: { 'X-Api-Key': env.API_NINJAS_KEY }, // secret from CF\r\n  });\r\n\r\n  // Pass through response body/status; set cache headers if OK\r\n  const text = await res.text();\r\n  const headers = new Headers(res.headers);\r\n  headers.set('Content-Type', headers.get('Content-Type') || 'application/json');\r\n  // Cache for 12 hours at the edge (tune for your use case)\r\n  if (res.ok) headers.set('Cache-Control', 'public, s-maxage=43200');\r\n\r\n  const out = new Response(text, { status: res.status, headers });\r\n\r\n  // Store in Cloudflare's edge cache (respects Cache-Control, Set-Cookie cannot be cached)\r\n  if (res.ok) await cache.put(cacheKey, out.clone());\r\n  return out;\r\n}\r\n\r\nasync function handleCountryFlag(request, env) {\r\n  const url = new URL(request.url);\r\n  const country = url.searchParams.get('country') || '';\r\n  if (!country) {\r\n    return Response.json({ error: \"Missing 'country' query param\" }, { status: 400 });\r\n  }\r\n\r\n  // Build upstream request for country flag\r\n  const upstream = new URL('https://api.api-ninjas.com/v1/countryflag');\r\n  upstream.searchParams.set('country', country);\r\n\r\n  // (Optional) Edge cache: try to serve from Cloudflare cache first\r\n  const cacheKey = new Request(upstream.toString(), { headers: { 'X-Api-Key': 'omitted' } });\r\n  const cache = caches.default; // Cloudflare Cache API\r\n  let cached = await cache.match(cacheKey);\r\n  if (cached) return cached; // cache hit\r\n\r\n  const res = await fetch(upstream.toString(), {\r\n    headers: { 'X-Api-Key': env.API_NINJAS_KEY }, // secret from CF\r\n  });\r\n\r\n  // Pass through response body/status; set cache headers if OK\r\n  const text = await res.text();\r\n  const headers = new Headers(res.headers);\r\n  headers.set('Content-Type', headers.get('Content-Type') || 'application/json');\r\n  // Cache for 12 hours at the edge (tune for your use case)\r\n  if (res.ok) headers.set('Cache-Control', 'public, s-maxage=43200');\r\n\r\n  const out = new Response(text, { status: res.status, headers });\r\n\r\n  // Store in Cloudflare's edge cache (respects Cache-Control, Set-Cookie cannot be cached)\r\n  if (res.ok) await cache.put(cacheKey, out.clone());\r\n  return out;\r\n}\r\n\r\nasync function handleAdvice(request, env) {\r\n  // Build upstream request for advice\r\n  const upstream = new URL('https://api.api-ninjas.com/v1/advice');\r\n\r\n  // (Optional) Edge cache: try to serve from Cloudflare cache first\r\n  const cacheKey = new Request(upstream.toString(), { headers: { 'X-Api-Key': 'omitted' } });\r\n  const cache = caches.default; // Cloudflare Cache API\r\n  let cached = await cache.match(cacheKey);\r\n  if (cached) return cached; // cache hit\r\n\r\n  const res = await fetch(upstream.toString(), {\r\n    headers: { 'X-Api-Key': env.API_NINJAS_KEY }, // secret from CF\r\n  });\r\n\r\n  // Pass through response body/status; set cache headers if OK\r\n  const text = await res.text();\r\n  const headers = new Headers(res.headers);\r\n  headers.set('Content-Type', headers.get('Content-Type') || 'application/json');\r\n  // Cache for 12 hours at the edge (tune for your use case)\r\n  if (res.ok) headers.set('Cache-Control', 'public, s-maxage=43200');\r\n\r\n  const out = new Response(text, { status: res.status, headers });\r\n\r\n  // Store in Cloudflare's edge cache (respects Cache-Control, Set-Cookie cannot be cached)\r\n  if (res.ok) await cache.put(cacheKey, out.clone());\r\n  return out;\r\n}\r\n\r\nasync function handleHoroscope(request, env) {\r\n  const url = new URL(request.url);\r\n  const zodiac = url.searchParams.get('zodiac') || 'aries';\r\n  \r\n  // Build upstream request for horoscope\r\n  const upstream = new URL('https://api.api-ninjas.com/v1/horoscope');\r\n  upstream.searchParams.set('zodiac', zodiac);\r\n\r\n  // (Optional) Edge cache: try to serve from Cloudflare cache first\r\n  const cacheKey = new Request(upstream.toString(), { headers: { 'X-Api-Key': 'omitted' } });\r\n  const cache = caches.default; // Cloudflare Cache API\r\n  let cached = await cache.match(cacheKey);\r\n  if (cached) return cached; // cache hit\r\n\r\n  const res = await fetch(upstream.toString(), {\r\n    headers: { 'X-Api-Key': env.API_NINJAS_KEY }, // secret from CF\r\n  });\r\n\r\n  // Pass through response body/status; set cache headers if OK\r\n  const text = await res.text();\r\n  const headers = new Headers(res.headers);\r\n  headers.set('Content-Type', headers.get('Content-Type') || 'application/json');\r\n  // Cache for 12 hours at the edge (tune for your use case)\r\n  if (res.ok) headers.set('Cache-Control', 'public, s-maxage=43200');\r\n\r\n  const out = new Response(text, { status: res.status, headers });\r\n\r\n  // Store in Cloudflare's edge cache (respects Cache-Control, Set-Cookie cannot be cached)\r\n  if (res.ok) await cache.put(cacheKey, out.clone());\r\n  return out;\r\n}\r\n", "// Handle text-to-speech requests to MiniMax API\r\nexport async function onRequestPost(context) {\r\n  // CORS headers for all responses\r\n  const corsHeaders = {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n  };\r\n\r\n  // Check for required credentials\r\n  const GROUP_ID = context.env.MINIMAX_GROUP_ID;\r\n  const API_KEY = context.env.MINIMAX_API_KEY;\r\n  \r\n  if (!GROUP_ID || !API_KEY) {\r\n    console.error(\"Missing required MiniMax API credentials\");\r\n    return new Response(JSON.stringify({\r\n      error: \"Server configuration error: Missing API credentials\"\r\n    }), {\r\n      status: 500,\r\n      headers: corsHeaders\r\n    });\r\n  }\r\n\r\n  try {\r\n    // Parse request body\r\n    const requestData = await context.request.json();\r\n    \r\n    // Validate required fields\r\n    if (!requestData.text) {\r\n      return new Response(JSON.stringify({\r\n        error: \"Missing required 'text' field\"\r\n      }), {\r\n        status: 400,\r\n        headers: corsHeaders\r\n      });\r\n    }\r\n    \r\n    // Get voice ID from the mapping function\r\n    const voiceId = getMiniMaxVoiceId(requestData.voice);\r\n    console.log(`Mapping voice '${requestData.voice}' to MiniMax voice_id: '${voiceId}'`);\r\n    \r\n    // Using the newer API structure for t2a_v2 endpoint\r\n    const payload = {\r\n      model: requestData.model || \"speech-02-turbo\", // Use model from request or default to turbo\r\n      text: requestData.text,\r\n      stream: false,\r\n      language_boost: \"auto\",\r\n      voice_setting: {\r\n        voice_id: voiceId,\r\n        speed: Number(requestData.speed || 1.0),\r\n        vol: Number(requestData.volume || 1.0),\r\n        pitch: Math.round(Number(requestData.pitch || 0))\r\n      },\r\n      audio_setting: {\r\n        sample_rate: 32000,\r\n        bitrate: 128000,\r\n        format: \"mp3\"\r\n      }\r\n    };\r\n    \r\n    // Process emotion metadata for more expressive speech\r\n    if (requestData.emotion) {\r\n      console.log(`Applying emotion profile: \"${requestData.emotion}\"`);\r\n      \r\n      // Map common emotions to voice parameters for fine-tuning\r\n      const emotionProfiles = {\r\n        // Sad emotions - slower, lower pitch, softer\r\n        \"\u60B2\u4F24\": { speedMod: 0.9, pitchMod: -1, volMod: 0.85 },\r\n        \"\u54C0\u4F24\": { speedMod: 0.85, pitchMod: -1, volMod: 0.8 },\r\n        \"\u6CAE\u4E27\": { speedMod: 0.9, pitchMod: -1, volMod: 0.9 },\r\n        \"\u4F24\u611F\": { speedMod: 0.95, pitchMod: -1, volMod: 0.9 },\r\n        \"\u5FE7\u90C1\": { speedMod: 0.9, pitchMod: -1, volMod: 0.85 },\r\n        \"\u60B2\u75DB\": { speedMod: 0.8, pitchMod: -1, volMod: 0.8 },\r\n        \"\u60B2\u54C0\": { speedMod: 0.85, pitchMod: -1, volMod: 0.85 },\r\n        \r\n        // Happy emotions - faster, higher pitch, louder\r\n        \"\u6B22\u5FEB\": { speedMod: 1.15, pitchMod: 1, volMod: 1.15 },\r\n        \"\u559C\u60A6\": { speedMod: 1.1, pitchMod: 1, volMod: 1.1 },\r\n        \"\u5174\u594B\": { speedMod: 1.2, pitchMod: 1, volMod: 1.2 },\r\n        \"\u70ED\u60C5\": { speedMod: 1.15, pitchMod: 1, volMod: 1.15 },\r\n        \"\u6109\u5FEB\": { speedMod: 1.1, pitchMod: 1, volMod: 1.05 },\r\n        \"\u5F00\u5FC3\": { speedMod: 1.1, pitchMod: 1, volMod: 1.1 },\r\n        \r\n        // Calm emotions - normal speed, normal to low pitch, normal volume\r\n        \"\u5E73\u9759\": { speedMod: 1.0, pitchMod: 0, volMod: 1.0 },\r\n        \"\u6C89\u601D\": { speedMod: 0.95, pitchMod: 0, volMod: 0.95 },\r\n        \"\u51B7\u9759\": { speedMod: 0.97, pitchMod: 0, volMod: 0.97 },\r\n        \"\u6E29\u548C\": { speedMod: 1.0, pitchMod: 0, volMod: 1.0 },\r\n        \r\n        // Serious emotions - slower, lower pitch, normal volume\r\n        \"\u4E25\u8083\": { speedMod: 0.95, pitchMod: -1, volMod: 1.0 },\r\n        \"\u5E84\u91CD\": { speedMod: 0.9, pitchMod: -1, volMod: 1.05 },\r\n        \"\u90D1\u91CD\": { speedMod: 0.95, pitchMod: -1, volMod: 1.05 },\r\n        \r\n        // Excited emotions - faster, higher pitch, louder\r\n        \"\u6FC0\u52A8\": { speedMod: 1.15, pitchMod: 1, volMod: 1.2 },\r\n        \"\u632F\u594B\": { speedMod: 1.1, pitchMod: 1, volMod: 1.15 },\r\n        \"\u6FC0\u60C5\": { speedMod: 1.15, pitchMod: 1, volMod: 1.2 },\r\n        \r\n        // Poetic - slower, melodic\r\n        \"\u8BD7\u610F\": { speedMod: 0.85, pitchMod: 0, volMod: 0.95 },\r\n        \"\u6292\u60C5\": { speedMod: 0.9, pitchMod: 0, volMod: 0.95 },\r\n        \"\u6587\u5B66\u6027\": { speedMod: 0.9, pitchMod: 0, volMod: 1.0 }\r\n      };\r\n      \r\n      // Apply fine-tuning based on detected emotion if available in our profiles\r\n      const emotionKey = Object.keys(emotionProfiles).find(key => \r\n        requestData.emotion.includes(key)\r\n      );\r\n      \r\n      if (emotionKey) {\r\n        const profile = emotionProfiles[emotionKey];\r\n        console.log(`Found matching emotion profile: ${emotionKey}`);\r\n        \r\n        // Apply subtle adjustments to make emotion more natural\r\n        // Only adjust if the DeepSeek analysis hasn't already provided specific parameters\r\n        if (requestData.speed === 1.0) {\r\n          payload.voice_setting.speed = Math.max(0.5, Math.min(2.0, payload.voice_setting.speed * profile.speedMod));\r\n        }\r\n        \r\n        if (requestData.pitch === 0) {\r\n          // Ensure pitch is within \u00B11 range for natural sounding speech\r\n          payload.voice_setting.pitch = Math.round(Math.max(-1, Math.min(1, payload.voice_setting.pitch + profile.pitchMod)));\r\n        }\r\n        \r\n        if (requestData.volume === 1.0) {\r\n          payload.voice_setting.vol = Math.max(0.1, Math.min(2.0, payload.voice_setting.vol * profile.volMod));\r\n        }\r\n        \r\n        console.log(`Applied emotion profile adjustments: speed=${payload.voice_setting.speed}, pitch=${payload.voice_setting.pitch}, vol=${payload.voice_setting.vol}`);\r\n      }\r\n      \r\n      // Pass emotion as metadata to TTS engine\r\n      payload.emotion = requestData.emotion;\r\n    }\r\n    \r\n    // Handle emphasis and prosody\r\n    if (requestData.emphasis && Array.isArray(requestData.emphasis) && requestData.emphasis.length > 0) {\r\n      console.log(`Applying emphasis on ${requestData.emphasis.length} phrases: ${requestData.emphasis.join(', ')}`);\r\n      \r\n      payload.prosody = {\r\n        emphasis: requestData.emphasis\r\n      };\r\n      \r\n      // Handle pause duration for better phrasing\r\n      if (requestData.pause_duration) {\r\n        payload.prosody.pause_duration = Number(requestData.pause_duration);\r\n        console.log(`Setting custom pause duration: ${payload.prosody.pause_duration}`);\r\n      } else if (requestData.text.length > 100) {\r\n        // For longer passages without explicit pause setting\r\n        const textType = detectTextType(requestData.text);\r\n        \r\n        if (textType === 'poetry') {\r\n          payload.prosody.pause_duration = 1.5; // Longer pauses for poetry\r\n        } else if (textType === 'dialogue') {\r\n          payload.prosody.pause_duration = 1.3; // Medium pauses for dialogue\r\n        } else {\r\n          payload.prosody.pause_duration = 1.2; // Standard pause for prose\r\n        }\r\n        \r\n        console.log(`Applied automatic pause duration ${payload.prosody.pause_duration} based on text type: ${textType}`);\r\n      }\r\n    }\r\n    \r\n    // Apply sentence-level analysis if available\r\n    if (requestData.sentence_analysis && Array.isArray(requestData.sentence_analysis) && \r\n        requestData.sentence_analysis.length > 0) {\r\n        \r\n      console.log(`Applying sentence-level analysis for ${requestData.sentence_analysis.length} sentences`);\r\n      \r\n      // \u68C0\u67E5\u662F\u5426\u6709\u81F3\u5C11\u4E24\u4E2A\u53E5\u5B50\u5177\u6709\u4E0D\u540C\u60C5\u7EEA\r\n      const hasMultipleEmotions = requestData.sentence_analysis.some((sentence, index, array) => {\r\n        if (index === 0) return false;\r\n        return sentence.emotion !== array[0].emotion;\r\n      });\r\n      \r\n      if (hasMultipleEmotions) {\r\n        console.log('\u68C0\u6D4B\u5230\u591A\u79CD\u60C5\u7EEA\u8868\u8FBE\uFF0C\u5E94\u7528\u53E5\u5B50\u7EA7\u60C5\u611F\u5904\u7406');\r\n        \r\n        try {\r\n          // \u4F7F\u7528MiniMax API\u7684\u9AD8\u7EA7\u529F\u80FD\u6765\u8BBE\u7F6E\u6BCF\u4E2A\u53E5\u5B50\u7684\u60C5\u611F\uFF0C\u800C\u4E0D\u662F\u901A\u8FC7SSML\u6807\u8BB0\r\n          // \u521B\u5EFA\u4E00\u4E2A\u53E5\u5B50\u6570\u7EC4\uFF0C\u6BCF\u4E2A\u53E5\u5B50\u53EA\u5305\u542B\u539F\u6587\uFF0C\u800C\u53C2\u6570\u901A\u8FC7\u5143\u6570\u636E\u4F20\u9012\r\n          const sentences = requestData.sentence_analysis.map(sentence => ({\r\n            text: sentence.text,\r\n            params: {\r\n              speed: Math.max(0.5, Math.min(2.0, Number(sentence.speed) || 1.0)),\r\n              pitch: Math.round(Math.max(-1, Math.min(1, Number(sentence.pitch) || 0))),\r\n              volume: Math.max(0.1, Math.min(2.0, Number(sentence.volume) || 1.0)),\r\n              emotion: sentence.emotion || requestData.emotion\r\n            }\r\n          }));\r\n          \r\n          // \u5C06\u539F\u59CB\u53E5\u5B50\u6587\u672C\u76F4\u63A5\u6DFB\u52A0\u5230\u5143\u6570\u636E\u4E2D\uFF0C\u4E0D\u6DFB\u52A0\u4EFB\u4F55\u6807\u8BB0\r\n          payload.sentence_segments = sentences.map(s => s.text);\r\n          \r\n          // \u4E0D\u4FEE\u6539\u539F\u59CB\u6587\u672C\uFF0C\u786E\u4FDDTTS\u53EA\u8BFB\u539F\u6587\r\n          console.log('\u4E0D\u4F7F\u7528SSML\u6807\u8BB0\uFF0C\u4EC5\u901A\u8FC7API\u5143\u6570\u636E\u4F20\u9012\u60C5\u611F\u53C2\u6570');\r\n          \r\n          // \u8BBE\u7F6Eper_sentence_settings\u6807\u5FD7\uFF0C\u544A\u8BC9API\u6211\u4EEC\u5E0C\u671B\u4F7F\u7528\u53E5\u5B50\u7EA7\u8BBE\u7F6E\r\n          payload.use_sentence_level_settings = true;\r\n        } catch (error) {\r\n          console.error('\u53E5\u5B50\u7EA7\u5904\u7406\u9519\u8BEF\uFF1A', error);\r\n        }\r\n      }\r\n      \r\n      // \u65E0\u8BBA\u5982\u4F55\uFF0C\u90FD\u6DFB\u52A0\u53E5\u5B50\u8BBE\u7F6E\u4F5C\u4E3A\u5143\u6570\u636E\r\n      payload.sentence_settings = requestData.sentence_analysis.map(sentence => ({\r\n        text: sentence.text,\r\n        voice_setting: {\r\n          speed: Number(sentence.speed || payload.voice_setting.speed),\r\n          pitch: Math.round(Number(sentence.pitch || payload.voice_setting.pitch)),\r\n          vol: Number(sentence.volume || payload.voice_setting.vol),\r\n          emotion: sentence.emotion || requestData.emotion\r\n        }\r\n      }));\r\n      \r\n      console.log(`\u6DFB\u52A0\u4E86${payload.sentence_settings.length}\u4E2A\u53E5\u5B50\u7EA7\u8BBE\u7F6E`);\r\n    }\r\n    \r\n    // Debug the final JSON structure\r\n    const finalJSON = JSON.stringify(payload);\r\n    console.log(`Final request payload: ${finalJSON}`);\r\n    \r\n    // Log request to MiniMax API\r\n    console.log(`Sending TTS request to MiniMax API for text: \"${payload.text.substring(0, 30)}${payload.text.length > 30 ? '...' : ''}\"`);\r\n    \r\n    // Call MiniMax API with the new endpoint\r\n    const miniMaxUrl = `https://api.minimax.chat/v1/t2a_v2?GroupId=${GROUP_ID}`;\r\n    \r\n    const response = await fetch(miniMaxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${API_KEY}`\r\n      },\r\n      body: finalJSON\r\n    });\r\n    \r\n    // Check response status\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error(`MiniMax API error (${response.status}): ${errorText}`);\r\n      return new Response(JSON.stringify({\r\n        error: `MiniMax API returned ${response.status}`,\r\n        details: errorText\r\n      }), {\r\n        status: response.status,\r\n        headers: corsHeaders\r\n      });\r\n    }\r\n    \r\n    // Check content type\r\n    const contentType = response.headers.get('Content-Type') || '';\r\n    console.log(`MiniMax API responded with Content-Type: ${contentType}`);\r\n    \r\n    // Handle response based on content type\r\n    if (contentType.includes('application/json')) {\r\n      const jsonResponse = await response.json();\r\n      console.log(`Received JSON response:`, jsonResponse);\r\n      \r\n      // Process newer t2a_v2 API response format\r\n      if (jsonResponse.data && jsonResponse.data.audio) {\r\n        // Extract the audio data\r\n        const audioData = jsonResponse.data.audio;\r\n        \r\n        try {\r\n          // Direct binary conversion from base64 or hex to a binary response\r\n          let bytes;\r\n          \r\n          // Detect if it's hex format\r\n          if (/^[0-9a-fA-F]+$/.test(audioData)) {\r\n            // Convert hex to binary\r\n            bytes = new Uint8Array(audioData.length / 2);\r\n            for (let i = 0; i < audioData.length; i += 2) {\r\n              bytes[i / 2] = parseInt(audioData.substring(i, i + 2), 16);\r\n            }\r\n            console.log(`Converted hex audio data (${bytes.byteLength} bytes)`);\r\n          } else {\r\n            // Assume base64 and convert to binary\r\n            const binaryString = atob(audioData);\r\n            bytes = new Uint8Array(binaryString.length);\r\n            for (let i = 0; i < binaryString.length; i++) {\r\n              bytes[i] = binaryString.charCodeAt(i);\r\n            }\r\n            console.log(`Converted base64 audio data (${bytes.byteLength} bytes)`);\r\n          }\r\n          \r\n          // Return binary audio data with appropriate headers\r\n          return new Response(bytes, {\r\n            headers: {\r\n              'Content-Type': 'audio/mp3',\r\n              'Cache-Control': 'public, max-age=86400',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n              'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(`Error processing audio data: ${error.message}`);\r\n          // If conversion fails, return the original response\r\n          return new Response(JSON.stringify({\r\n            error: \"Failed to process audio data\",\r\n            original_response: jsonResponse\r\n          }), {\r\n            headers: corsHeaders\r\n          });\r\n        }\r\n      } \r\n      // Legacy format with audio_base64\r\n      else if (jsonResponse.audio_base64) {\r\n        // Convert base64 to binary data\r\n        const binaryString = atob(jsonResponse.audio_base64);\r\n        const len = binaryString.length;\r\n        const bytes = new Uint8Array(len);\r\n        \r\n        for (let i = 0; i < len; i++) {\r\n          bytes[i] = binaryString.charCodeAt(i);\r\n        }\r\n        \r\n        console.log(`Returning audio data (${bytes.length} bytes)`);\r\n        \r\n        // Return audio data with appropriate headers\r\n        return new Response(bytes, {\r\n          headers: {\r\n            'Content-Type': 'audio/mp3',\r\n            'Cache-Control': 'public, max-age=86400',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n          }\r\n        });\r\n      } \r\n      // Handle audio_file URLs\r\n      else if (jsonResponse.audio_file || (jsonResponse.data && jsonResponse.data.audio_file)) {\r\n        const audioFileUrl = jsonResponse.audio_file || (jsonResponse.data && jsonResponse.data.audio_file);\r\n        \r\n        if (audioFileUrl) {\r\n          // If the API returns a URL to an audio file\r\n          console.log(`Audio file URL received: ${audioFileUrl}`);\r\n          \r\n          // Fetch the audio file\r\n          const audioFileResponse = await fetch(audioFileUrl);\r\n          const audioData = await audioFileResponse.arrayBuffer();\r\n          \r\n          console.log(`Returning audio file data (${audioData.byteLength} bytes)`);\r\n          \r\n          // Return audio data with appropriate headers\r\n          return new Response(audioData, {\r\n            headers: {\r\n              'Content-Type': 'audio/mp3',\r\n              'Cache-Control': 'public, max-age=86400',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n              'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n            }\r\n          });\r\n        }\r\n      }\r\n      \r\n      // Pass through any other JSON responses\r\n      return new Response(JSON.stringify(jsonResponse), {\r\n        headers: corsHeaders\r\n      });\r\n    } else {\r\n      // Assume binary audio data from response\r\n      const audioData = await response.arrayBuffer();\r\n      \r\n      // Check if we have data\r\n      if (audioData.byteLength === 0) {\r\n        return new Response(JSON.stringify({\r\n          error: \"Received empty audio data from MiniMax API\",\r\n          tip: \"Check API credentials and request parameters\"\r\n        }), {\r\n          status: 500,\r\n          headers: corsHeaders\r\n        });\r\n      }\r\n      \r\n      console.log(`Returning binary audio data (${audioData.byteLength} bytes)`);\r\n      \r\n      // Return binary data with appropriate headers\r\n      return new Response(audioData, {\r\n        headers: {\r\n          'Content-Type': 'audio/mp3',\r\n          'Cache-Control': 'public, max-age=86400',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error processing TTS request: ${error.message}`);\r\n    return new Response(JSON.stringify({\r\n      error: \"Internal server error\",\r\n      message: error.message\r\n    }), {\r\n      status: 500,\r\n      headers: corsHeaders\r\n    });\r\n  }\r\n}\r\n\r\n// Handle OPTIONS requests for CORS preflight\r\nexport async function onRequestOptions() {\r\n  return new Response(null, {\r\n    status: 204,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n      'Access-Control-Max-Age': '86400'\r\n    }\r\n  });\r\n}\r\n\r\n// Handle GET requests with a friendly message\r\nexport function onRequestGet() {\r\n  return new Response(JSON.stringify({\r\n    message: \"This is the TTS API endpoint. Please make a POST request with text data to convert to speech.\",\r\n    example: {\r\n      \"text\": \"\u4EBA\u5DE5\u667A\u80FD\u4E0D\u662F\u8981\u66FF\u4EE3\u4EBA\u7C7B\uFF0C\u800C\u662F\u8981\u589E\u5F3A\u4EBA\u7C7B\u7684\u80FD\u529B\u3002\",\r\n      \"voice\": \"Chinese (Mandarin)_Elite_Young\",\r\n      \"model\": \"speech-02-turbo\",\r\n      \"speed\": 1.0,\r\n      \"pitch\": 0,\r\n      \"volume\": 1.0\r\n    },\r\n    emotion_feature: {\r\n      \"description\": \"Optional AI emotion sensing feature that analyzes text sentiment\",\r\n      \"parameters\": {\r\n        \"emotion\": \"Detected emotion keyword (e.g., 'serene_melancholy', 'excited', 'calm')\",\r\n        \"emphasis\": [\"Array of phrases to emphasize\"],\r\n        \"pause_duration\": \"Multiplier for pause length between phrases (e.g., 1.2)\"\r\n      }\r\n    },\r\n    supported_voices: {\r\n      \"Chinese (Mandarin)_Elite_Young\": \"\u7CBE\u82F1\u9752\u5E74\u97F3\u8272\",\r\n      \"Chinese (Mandarin)_College_Student\": \"\u9752\u5E74\u5927\u5B66\u751F\u97F3\u8272\",\r\n      \"Chinese (Mandarin)_Young_Girl\": \"\u5C11\u5973\u97F3\u8272\",\r\n      \"Chinese (Mandarin)_Male_Announcer\": \"\u96C4\u6D51\u64AD\u97F3\u7537\u58EB\",\r\n      \"Chinese (Mandarin)_Lyrical_Voice\": \"\u6292\u60C5\u7537\u58F0\",\r\n      \"Chinese (Mandarin)_Pure-hearted_Boy\": \"\u7EAF\u771F\u5C11\u5E74\u7537\u751F\",\r\n      \"Chinese (Mandarin)_Warm_Girl\": \"\u6E29\u6696\u5C11\u5E74\u5973\u751F\",\r\n      \"English_Trustworthy_Man\": \"Trustworthy Man\",\r\n      \"English_Graceful_Lady\": \"Graceful Lady\",\r\n      \"English_UpsetGirl\": \"Upset Girl\",\r\n      \"English_Wiselady\": \"Wise Lady\",\r\n      \"English_Gentle_Voiced_Man\": \"Gentle-voiced Man\",\r\n      \"Cantonese_Professional_Host_Female\": \"\u4E13\u4E1A\u5973\u4E3B\u6301\",\r\n      \"Cantonese_Professional_Host_Male\": \"\u4E13\u4E1A\u7537\u4E3B\u6301\"\r\n    },\r\n    models: {\r\n      \"speech-02-turbo\": \"Recommended: Fast, high-quality speech synthesis\",\r\n      \"speech-02-hd\": \"Premium quality with better emotional expression (higher latency)\"\r\n    },\r\n    api_endpoint: \"POST /api/tts\",\r\n    documentation: \"Using MiniMax T2A v2 API\"\r\n  }), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n    }\r\n  });\r\n}\r\n\r\n// Function to map frontend voice IDs to MiniMax voice IDs\r\nfunction getMiniMaxVoiceId(frontendVoice) {\r\n  // Default voice if none provided\r\n  if (!frontendVoice) return \"male-qn-jingying\";\r\n  \r\n  // Voice mapping\r\n  // Full list of voices for MiniMax TTS API\r\n  const voiceMap = {\r\n    // Chinese Mandarin voices\r\n    \"male-qn-qingse\": \"male-qn-qingse\",                 // \u9752\u6DA9\u9752\u5E74\u97F3\u8272\r\n    \"male-qn-jingying\": \"male-qn-jingying\",             // \u7CBE\u82F1\u9752\u5E74\u97F3\u8272\r\n    \"male-qn-badao\": \"male-qn-badao\",                   // \u9738\u9053\u9752\u5E74\u97F3\u8272\r\n    \"female-shaonv\": \"female-shaonv\",                   // \u5C11\u5973\u97F3\u8272\r\n    \"female-yujie\": \"female-yujie\",                     // \u5FA1\u59D0\u97F3\u8272\r\n    \"female-chengshu\": \"female-chengshu\",               // \u6210\u719F\u5973\u6027\u97F3\u8272\r\n    \"female-tianmei\": \"female-tianmei\",                 // \u751C\u7F8E\u5973\u6027\u97F3\u8272\r\n    \"presenter_male\": \"presenter_male\",                 // \u7537\u6027\u4E3B\u6301\u4EBA\r\n    \"presenter_female\": \"presenter_female\",             // \u5973\u6027\u4E3B\u6301\u4EBA\r\n    \"audiobook_male_1\": \"audiobook_male_1\",             // \u7537\u6027\u6709\u58F0\u4E661\r\n    \"audiobook_male_2\": \"audiobook_male_2\",             // \u7537\u6027\u6709\u58F0\u4E662\r\n    \"audiobook_female_1\": \"audiobook_female_1\",         // \u5973\u6027\u6709\u58F0\u4E661\r\n    \"audiobook_female_2\": \"audiobook_female_2\",         // \u5973\u6027\u6709\u58F0\u4E662\r\n    \"clever_boy\": \"clever_boy\",                         // \u806A\u660E\u7537\u7AE5\r\n    \"cute_boy\": \"cute_boy\",                             // \u53EF\u7231\u7537\u7AE5\r\n    \"lovely_girl\": \"lovely_girl\",                       // \u840C\u840C\u5973\u7AE5\r\n    \"junlang_nanyou\": \"junlang_nanyou\",                 // \u4FCA\u6717\u7537\u53CB\r\n    \"chunzhen_xuedi\": \"chunzhen_xuedi\",                 // \u7EAF\u771F\u5B66\u5F1F\r\n    \"qiaopi_mengmei\": \"qiaopi_mengmei\",                 // \u4FCF\u76AE\u840C\u59B9\r\n    \r\n    // English voices\r\n    \"Santa_Claus\": \"Santa_Claus\",                       // Santa Claus\r\n    \"Grinch\": \"Grinch\",                                 // Grinch\r\n    \"Rudolph\": \"Rudolph\",                               // Rudolph\r\n    \"Arnold\": \"Arnold\",                                 // Arnold\r\n    \"Charming_Santa\": \"Charming_Santa\",                 // Charming Santa\r\n    \"Charming_Lady\": \"Charming_Lady\",                   // Charming Lady\r\n    \"Sweet_Girl\": \"Sweet_Girl\",                         // Sweet Girl\r\n    \"Cute_Elf\": \"Cute_Elf\",                             // Cute Elf\r\n    \"Attractive_Girl\": \"Attractive_Girl\",               // Attractive Girl\r\n    \"Serene_Woman\": \"Serene_Woman\",                     // Serene Woman\r\n    \r\n    // Chinese Mandarin voices (alternative labeling)\r\n    \"Chinese (Mandarin)_News_Anchor\": \"Chinese (Mandarin)_News_Anchor\",                   // \u65B0\u95FB\u5973\u58F0\r\n    \"Chinese (Mandarin)_Refreshing_Young_Man\": \"Chinese (Mandarin)_Refreshing_Young_Man\", // \u8212\u6717\u7537\u58F0\r\n    \"Chinese (Mandarin)_Unrestrained_Young_Man\": \"Chinese (Mandarin)_Unrestrained_Young_Man\", // \u4E0D\u7F81\u9752\u5E74\r\n    \"Chinese (Mandarin)_Kind-hearted_Antie\": \"Chinese (Mandarin)_Kind-hearted_Antie\",     // \u70ED\u5FC3\u5927\u5A76\r\n    \"Chinese (Mandarin)_Gentleman\": \"Chinese (Mandarin)_Gentleman\",                       // \u6E29\u6DA6\u7537\u58F0\r\n    \"Chinese (Mandarin)_Male_Announcer\": \"Chinese (Mandarin)_Male_Announcer\",             // \u64AD\u62A5\u7537\u58F0\r\n    \"Chinese (Mandarin)_Sweet_Lady\": \"Chinese (Mandarin)_Sweet_Lady\",                     // \u751C\u7F8E\u5973\u58F0\r\n    \"Chinese (Mandarin)_Wise_Women\": \"Chinese (Mandarin)_Wise_Women\",                     // \u9605\u5386\u59D0\u59D0\r\n    \"Chinese (Mandarin)_Gentle_Youth\": \"Chinese (Mandarin)_Gentle_Youth\",                 // \u6E29\u6DA6\u9752\u5E74\r\n    \"Chinese (Mandarin)_Warm_Girl\": \"Chinese (Mandarin)_Warm_Girl\",                       // \u6E29\u6696\u5C11\u5973\r\n    \"Chinese (Mandarin)_Kind-hearted_Elder\": \"Chinese (Mandarin)_Kind-hearted_Elder\",     // \u82B1\u7532\u5976\u5976\r\n    \"Chinese (Mandarin)_Radio_Host\": \"Chinese (Mandarin)_Radio_Host\",                     // \u7535\u53F0\u7537\u4E3B\u64AD\r\n    \"Chinese (Mandarin)_Lyrical_Voice\": \"Chinese (Mandarin)_Lyrical_Voice\",               // \u6292\u60C5\u7537\u58F0\r\n    \"Chinese (Mandarin)_Straightforward_Boy\": \"Chinese (Mandarin)_Straightforward_Boy\",   // \u7387\u771F\u5F1F\u5F1F\r\n    \"Chinese (Mandarin)_Sincere_Adult\": \"Chinese (Mandarin)_Sincere_Adult\",               // \u771F\u8BDA\u9752\u5E74\r\n    \"Chinese (Mandarin)_Gentle_Senior\": \"Chinese (Mandarin)_Gentle_Senior\",               // \u6E29\u67D4\u5B66\u59D0\r\n    \"Chinese (Mandarin)_Stubborn_Friend\": \"Chinese (Mandarin)_Stubborn_Friend\",           // \u5634\u786C\u7AF9\u9A6C\r\n    \"Chinese (Mandarin)_Crisp_Girl\": \"Chinese (Mandarin)_Crisp_Girl\",                     // \u6E05\u8106\u5C11\u5973\r\n    \"Chinese (Mandarin)_Pure-hearted_Boy\": \"Chinese (Mandarin)_Pure-hearted_Boy\",         // \u6E05\u6F88\u90BB\u5BB6\u5F1F\u5F1F\r\n    \r\n    // Cantonese voices\r\n    \"Cantonese_ProfessionalHost\uFF08F)\": \"Cantonese_ProfessionalHost\uFF08F)\",                   // \u4E13\u4E1A\u5973\u4E3B\u6301\r\n    \"Cantonese_ProfessionalHost\uFF08M)\": \"Cantonese_ProfessionalHost\uFF08M)\",                   // \u4E13\u4E1A\u7537\u4E3B\u6301\r\n    \"Cantonese_PlayfulMan\": \"Cantonese_PlayfulMan\",                                       // \u6D3B\u6CFC\u7537\u58F0\r\n    \"Cantonese_CuteGirl\": \"Cantonese_CuteGirl\",                                           // \u53EF\u7231\u5973\u5B69\r\n    \r\n    // English voices (alternative labeling)\r\n    \"English_Trustworthy_Man\": \"English_Trustworthy_Man\",           // Trustworthy Man\r\n    \"English_Graceful_Lady\": \"English_Graceful_Lady\",               // Graceful Lady\r\n    \"English_Aussie_Bloke\": \"English_Aussie_Bloke\",                 // Aussie Bloke\r\n    \"English_Gentle-voiced_man\": \"English_Gentle-voiced_man\",       // Gentle-voiced man\r\n    \r\n    // Backward compatibility with old naming\r\n    \"Chinese (Mandarin)_Elite_Young\": \"male-qn-jingying\",\r\n    \"Chinese (Mandarin)_College_Student\": \"male-qn-daxuesheng\",\r\n    \"Chinese (Mandarin)_Young_Girl\": \"female-shaonv\",\r\n    \"Chinese (Mandarin)_Mature_Woman\": \"female-chengshu\",\r\n    \"Chinese (Mandarin)_Sweet_Woman\": \"female-tianmei\",\r\n    \"Chinese (Mandarin)_Male_Presenter\": \"presenter_male\",\r\n    \"Chinese (Mandarin)_Female_Presenter\": \"presenter_female\",\r\n    \"Chinese (Mandarin)_Cute_Boy\": \"cute_boy\",\r\n    \"Chinese (Mandarin)_Lovely_Girl\": \"lovely_girl\",\r\n    \"Cantonese_Professional_Host_Female\": \"Cantonese_ProfessionalHost\uFF08F)\",\r\n    \"Cantonese_Professional_Host_Male\": \"Cantonese_ProfessionalHost\uFF08M)\",\r\n    \"English_Diligent_Man\": \"English_Diligent_Man\",\r\n    \"English_Gentle_Voiced_Man\": \"English_Gentle-voiced_man\",\r\n    \"English_UpsetGirl\": \"English_UpsetGirl\",\r\n    \"English_Wiselady\": \"English_Wiselady\"\r\n  };\r\n  \r\n  // Return mapped voice or default if mapping not found\r\n  return voiceMap[frontendVoice] || \"male-qn-jingying\";\r\n}\r\n\r\n/**\r\n * Detect the type of text to optimize TTS parameters\r\n */\r\nfunction detectTextType(text) {\r\n  // Check for poetry patterns\r\n  const poetryPatterns = [\r\n    /[\uFF0C\u3002\uFF01\uFF1F\uFF1B][\uFF0C\u3002\uFF01\uFF1F\uFF1B]/, // Multiple punctuation in sequence (common in Chinese poetry)\r\n    /[\\n\\r]{2,}/,           // Multiple line breaks\r\n    /[\uFF0C\u3002][\uFF0C\u3002]/          // Multiple punctuation in sequence\r\n  ];\r\n  \r\n  // Check for dialogue patterns\r\n  const dialoguePatterns = [\r\n    /[\"\"].*?[\"\"]/, // Quoted speech\r\n    /[\"\"]/,        // Quotation marks\r\n    /[\uFF1A].*?[\u3002\uFF1F\uFF01]/  // Colon followed by statement\r\n  ];\r\n  \r\n  // Check for sentence split patterns\r\n  const sentenceSplitPatterns = [\r\n    /[\u3002\uFF01\uFF1F\uFF1B]/     // Chinese sentence ending punctuation\r\n  ];\r\n  \r\n  // Test for poetry\r\n  for (const pattern of poetryPatterns) {\r\n    if (pattern.test(text)) {\r\n      return 'poetry';\r\n    }\r\n  }\r\n  \r\n  // Test for dialogue\r\n  for (const pattern of dialoguePatterns) {\r\n    if (pattern.test(text)) {\r\n      return 'dialogue';\r\n    }\r\n  }\r\n  \r\n  // Default to prose\r\n  return 'prose';\r\n}\r\n\r\n/**\r\n * Split text into sentences for analysis\r\n * This function helps when the client doesn't provide sentence analysis\r\n */\r\nfunction splitIntoSentences(text) {\r\n  // \u7B80\u5355\u7684\u53E5\u5B50\u5206\u5272\u89C4\u5219\r\n  const sentences = text.split(/(?<=[\u3002\uFF01\uFF1F\uFF1B])/);\r\n  \r\n  // \u8FC7\u6EE4\u6389\u7A7A\u53E5\u5B50\r\n  return sentences.filter(sentence => sentence.trim().length > 0);\r\n}\r\n\r\nexport const config = {\r\n  runtime: 'edge',\r\n  maxDuration: 60 // Set maximum duration to 60 seconds\r\n}; ", "// Handle dialog text-to-speech requests to MiniMax API\r\nexport async function onRequestPost(context) {\r\n  // CORS headers for all responses\r\n  const corsHeaders = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization'\r\n  };\r\n\r\n  // Check for required credentials\r\n  const GROUP_ID = context.env.MINIMAX_GROUP_ID;\r\n  const API_KEY = context.env.MINIMAX_API_KEY;\r\n  \r\n  console.log(\"MINIMAX_GROUP_ID exists:\", !!GROUP_ID);\r\n  console.log(\"MINIMAX_API_KEY exists:\", !!API_KEY);\r\n  \r\n  if (!GROUP_ID || !API_KEY) {\r\n    console.error(\"Missing required MiniMax API credentials\");\r\n    return new Response(JSON.stringify({\r\n      error: \"Server configuration error: Missing API credentials\"\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        ...corsHeaders,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  try {\r\n    // Parse request body\r\n    const requestData = await context.request.json();\r\n    console.log(\"Request data received:\", JSON.stringify(requestData).substring(0, 200) + \"...\");\r\n    \r\n    // Validate required fields\r\n    if (!requestData.dialog || !Array.isArray(requestData.dialog) || requestData.dialog.length === 0) {\r\n      return new Response(JSON.stringify({\r\n        error: \"Missing or invalid 'dialog' field. Expected an array of roles with lines.\"\r\n      }), {\r\n        status: 400,\r\n        headers: {\r\n          ...corsHeaders,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n    \r\n    if (!requestData.roleVoices || typeof requestData.roleVoices !== 'object') {\r\n      return new Response(JSON.stringify({\r\n        error: \"Missing or invalid 'roleVoices' field. Expected an object mapping roles to voices.\"\r\n      }), {\r\n        status: 400,\r\n        headers: {\r\n          ...corsHeaders,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // \u91CD\u8981\uFF1A\u5B8C\u5168\u91CD\u8BBE\u6574\u4F53\u5904\u7406\u903B\u8F91 - \u9996\u5148\u83B7\u53D6\u89D2\u8272\u540D\u5230\u89D2\u8272\u5BF9\u8C61\u7684\u6620\u5C04\r\n    console.log(\"\u521B\u5EFA\u89D2\u8272\u540D\u5230\u89D2\u8272\u5BF9\u8C61\u7684\u6620\u5C04...\");\r\n    const roleMap = {};\r\n    requestData.dialog.forEach(role => {\r\n      roleMap[role.name] = role;\r\n    });\r\n    \r\n    // \u786E\u4FDD\u6536\u5230\u4E86\u987A\u5E8F\u4FE1\u606F\r\n    if (!requestData.original_sequence || !Array.isArray(requestData.original_sequence)) {\r\n      console.error(\"\u7F3A\u5C11\u987A\u5E8F\u4FE1\u606F\uFF0C\u65E0\u6CD5\u786E\u5B9A\u5BF9\u8BDD\u987A\u5E8F\");\r\n      return new Response(JSON.stringify({\r\n        error: \"Missing sequence information. Cannot determine dialog order.\"\r\n      }), {\r\n        status: 400,\r\n        headers: {\r\n          ...corsHeaders,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // \u6309\u7167sequence_position\u6392\u5E8F\u539F\u59CB\u5E8F\u5217\r\n    const sortedSequence = [...requestData.original_sequence].sort((a, b) => {\r\n      return a.sequence_position - b.sequence_position;\r\n    });\r\n    \r\n    console.log(`\u6309\u987A\u5E8F\u6392\u5217\u7684\u5BF9\u8BDD\u5E8F\u5217 (${sortedSequence.length} \u884C):`);\r\n    sortedSequence.forEach((seq, i) => {\r\n      console.log(`${i+1}. \u4F4D\u7F6E ${seq.sequence_position}: ${seq.role} \u884C ${seq.line_index}`);\r\n    });\r\n    \r\n    // \u9010\u884C\u5904\u7406\u5BF9\u8BDD\u5E76\u751F\u6210\u97F3\u9891\r\n    const audioSegments = [];\r\n    \r\n    // \u4E3A\u6BCF\u4E00\u884C\u751F\u6210\u97F3\u9891\uFF0C\u4E25\u683C\u6309\u7167\u539F\u59CB\u987A\u5E8F\u5904\u7406\r\n    for (let i = 0; i < sortedSequence.length; i++) {\r\n      const seq = sortedSequence[i];\r\n      const roleName = seq.role;\r\n      const lineIndex = seq.line_index;\r\n      \r\n      // \u83B7\u53D6\u89D2\u8272\u5BF9\u8C61\r\n      const role = roleMap[roleName];\r\n      if (!role) {\r\n        console.warn(`\u627E\u4E0D\u5230\u89D2\u8272 \"${roleName}\"\uFF0C\u8DF3\u8FC7\u6B64\u884C`);\r\n        continue;\r\n      }\r\n      \r\n      // \u83B7\u53D6\u8BE5\u89D2\u8272\u7684\u53F0\u8BCD\r\n      const line = role.lines[lineIndex];\r\n      if (!line) {\r\n        console.warn(`\u627E\u4E0D\u5230\u89D2\u8272 \"${roleName}\" \u7684\u7B2C ${lineIndex} \u884C\u53F0\u8BCD\uFF0C\u8DF3\u8FC7\u6B64\u884C`);\r\n        continue;\r\n      }\r\n      \r\n      // \u83B7\u53D6\u8BED\u97F3ID\r\n      const voiceId = getMiniMaxVoiceId(requestData.roleVoices[roleName]);\r\n      \r\n      // \u6839\u636E\u8BED\u8A00\u504F\u597D\u9009\u62E9\u6587\u672C\r\n      let text;\r\n      if (requestData.language_preference === 'chinese') {\r\n        text = line.chinese?.trim() || line.english?.trim();\r\n        console.log(`\u4F7F\u7528\u4E2D\u6587\u6587\u672C: \"${roleName}\" (\u5982\u679C\u9700\u8981\u4F1A\u56DE\u9000\u5230\u82F1\u6587)`);\r\n      } else if (requestData.language_preference === 'english') {\r\n        text = line.english?.trim() || line.chinese?.trim();\r\n        console.log(`\u4F7F\u7528\u82F1\u6587\u6587\u672C: \"${roleName}\" (\u5982\u679C\u9700\u8981\u4F1A\u56DE\u9000\u5230\u4E2D\u6587)`);\r\n      } else {\r\n        // \u9ED8\u8BA4\u884C\u4E3A - \u4F18\u5148\u4F7F\u7528\u82F1\u6587\r\n        text = line.english?.trim() || line.chinese?.trim();\r\n        console.log(`\u672A\u6307\u5B9A\u8BED\u8A00\u504F\u597D: \"${roleName}\"\uFF0C\u9ED8\u8BA4\u4F7F\u7528\u82F1\u6587`);\r\n      }\r\n      \r\n      if (!text) {\r\n        console.log(`[${i+1}/${sortedSequence.length}] \u8DF3\u8FC7\u7A7A\u884C: ${roleName}`);\r\n        continue; // \u8DF3\u8FC7\u7A7A\u884C\r\n      }\r\n      \r\n      console.log(`[${i+1}/${sortedSequence.length}] \u5904\u7406: ${roleName} \u8BF4 \"${text.substring(0, 30)}${text.length > 30 ? '...' : ''}\"`);\r\n      console.log(`\u4F7F\u7528\u8BED\u97F3ID: ${voiceId}`);\r\n      \r\n      // \u521B\u5EFA\u8BF7\u6C42payload\r\n      const payload = {\r\n        model: requestData.model || \"speech-02-turbo\",\r\n        text: text,\r\n        stream: false,\r\n        language_boost: \"auto\",\r\n        voice_setting: {\r\n          voice_id: voiceId,\r\n          speed: 1.0,  // \u56FA\u5B9A\u901F\u5EA6\r\n          vol: 1.0,    // \u56FA\u5B9A\u97F3\u91CF\r\n          pitch: 0     // \u56FA\u5B9A\u97F3\u8C03\r\n        },\r\n        audio_setting: {\r\n          sample_rate: 32000,\r\n          bitrate: 128000,\r\n          format: \"mp3\"\r\n        }\r\n      };\r\n      \r\n      // \u5728\u6BCF\u53E5\u8BDD\u7ED3\u5C3E\u6DFB\u52A0\u77ED\u6682\u505C\u987F\r\n      payload.text = payload.text + \"\uFF0C\";\r\n      \r\n      // \u8C03\u7528MiniMax API\r\n      const apiUrl = `https://api.minimax.chat/v1/t2a_v2?GroupId=${GROUP_ID}`;\r\n      \r\n      try {\r\n        console.log(`\u53D1\u9001\u8BF7\u6C42\u5230MiniMax API\uFF0C\u89D2\u8272: '${roleName}'\uFF0C\u987A\u5E8F: ${i+1}`);\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${API_KEY}`\r\n          },\r\n          body: JSON.stringify(payload)\r\n        });\r\n        \r\n        // \u68C0\u67E5\u54CD\u5E94\u72B6\u6001\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error(`MiniMax API\u9519\u8BEF: ${roleName}, ${response.status}`, errorText);\r\n          throw new Error(`MiniMax API\u9519\u8BEF: ${response.status}`);\r\n        }\r\n        \r\n        // \u83B7\u53D6\u5E76\u5904\u7406\u97F3\u9891\u6570\u636E\r\n        let audioBytes;\r\n        const contentType = response.headers.get('Content-Type') || '';\r\n        \r\n        if (contentType.includes('application/json')) {\r\n          // \u5904\u7406JSON\u54CD\u5E94\r\n          const responseData = await response.json();\r\n          \r\n          // \u5904\u7406\u4E0D\u540C\u683C\u5F0F\u7684\u97F3\u9891\u6570\u636E\r\n          if (responseData.data && responseData.data.audio) {\r\n            const audioData = responseData.data.audio;\r\n            \r\n            if (/^[0-9a-fA-F]+$/.test(audioData)) {\r\n              // \u5341\u516D\u8FDB\u5236\u683C\u5F0F\r\n              audioBytes = new Uint8Array(audioData.length / 2);\r\n              for (let j = 0; j < audioData.length; j += 2) {\r\n                audioBytes[j / 2] = parseInt(audioData.substring(j, j + 2), 16);\r\n              }\r\n            } else {\r\n              // Base64\u683C\u5F0F\r\n              const binaryString = atob(audioData);\r\n              audioBytes = new Uint8Array(binaryString.length);\r\n              for (let j = 0; j < binaryString.length; j++) {\r\n                audioBytes[j] = binaryString.charCodeAt(j);\r\n              }\r\n            }\r\n          } else if (responseData.audio_base64) {\r\n            // \u65E7\u7684Base64\u683C\u5F0F\r\n            const base64 = responseData.audio_base64.replace(/^data:audio\\/\\w+;base64,/, '');\r\n            const binary = atob(base64);\r\n            audioBytes = new Uint8Array(binary.length);\r\n            for (let j = 0; j < binary.length; j++) {\r\n              audioBytes[j] = binary.charCodeAt(j);\r\n            }\r\n          } else if (responseData.audio_file || (responseData.data && responseData.data.audio_file)) {\r\n            // \u5904\u7406\u97F3\u9891\u6587\u4EF6URL\r\n            const audioFileUrl = responseData.audio_file || (responseData.data && responseData.data.audio_file);\r\n            \r\n            if (audioFileUrl) {\r\n              const audioFileResponse = await fetch(audioFileUrl);\r\n              const audioBuffer = await audioFileResponse.arrayBuffer();\r\n              audioBytes = new Uint8Array(audioBuffer);\r\n            }\r\n          }\r\n        } else {\r\n          // \u5047\u8BBE\u662F\u4E8C\u8FDB\u5236\u97F3\u9891\u6570\u636E\r\n          const audioBuffer = await response.arrayBuffer();\r\n          audioBytes = new Uint8Array(audioBuffer);\r\n        }\r\n        \r\n        if (!audioBytes || audioBytes.length === 0) {\r\n          throw new Error(`\u6CA1\u6709\u8FD4\u56DE\u97F3\u9891\u6570\u636E: \"${text.substring(0, 30)}...\"`);\r\n        }\r\n        \r\n        // \u5C06\u97F3\u9891\u6BB5\u4FDD\u5B58\u5230\u6570\u7EC4\u4E2D\uFF0C\u4F7F\u7528\u539F\u59CB\u987A\u5E8F\u4F5C\u4E3A\u7D22\u5F15\r\n        audioSegments.push({\r\n          originalIndex: i,  // \u4F7F\u7528\u5FAA\u73AF\u7D22\u5F15\u4F5C\u4E3A\u539F\u59CB\u4F4D\u7F6E\r\n          audio: audioBytes,\r\n          role: roleName,\r\n          text: text.substring(0, 30) + (text.length > 30 ? '...' : '')\r\n        });\r\n        \r\n        console.log(`[${i+1}/${sortedSequence.length}] \u6210\u529F\u751F\u6210\u97F3\u9891: ${roleName}, ${audioBytes.length} \u5B57\u8282`);\r\n        \r\n      } catch (error) {\r\n        console.error(`[${i+1}/${sortedSequence.length}] \u5904\u7406\u9519\u8BEF: ${roleName}:`, error);\r\n        // \u7EE7\u7EED\u5904\u7406\u4E0B\u4E00\u884C\uFF0C\u800C\u4E0D\u662F\u5931\u8D25\u6574\u4E2A\u8BF7\u6C42\r\n      }\r\n    }\r\n    \r\n    // \u5982\u679C\u6CA1\u6709\u751F\u6210\u4EFB\u4F55\u97F3\u9891\uFF0C\u8FD4\u56DE\u9519\u8BEF\r\n    if (audioSegments.length === 0) {\r\n      return new Response(JSON.stringify({\r\n        error: \"\u6CA1\u6709\u751F\u6210\u4EFB\u4F55\u97F3\u9891\u3002\u8BF7\u68C0\u67E5\u5BF9\u8BDD\u6587\u672C\u662F\u5426\u6709\u6548\u3002\"\r\n      }), {\r\n        status: 500,\r\n        headers: {\r\n          ...corsHeaders,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n    \r\n    // \u6309\u539F\u59CB\u7D22\u5F15\u6392\u5E8F\u97F3\u9891\u6BB5\r\n    audioSegments.sort((a, b) => a.originalIndex - b.originalIndex);\r\n    \r\n    console.log(\"\u6700\u7EC8\u97F3\u9891\u5408\u5E76\u987A\u5E8F:\");\r\n    audioSegments.forEach((segment, i) => {\r\n      console.log(`  ${i+1}. ${segment.role}: \"${segment.text}\" (\u539F\u59CB\u4F4D\u7F6E: ${segment.originalIndex})`);\r\n    });\r\n    \r\n    // \u8BA1\u7B97\u5408\u5E76\u540E\u7684\u97F3\u9891\u603B\u957F\u5EA6\r\n    let totalLength = 0;\r\n    audioSegments.forEach(segment => { totalLength += segment.audio.length; });\r\n    \r\n    // \u521B\u5EFA\u5408\u5E76\u540E\u7684\u97F3\u9891\u7F13\u51B2\u533A\r\n    const mergedAudio = new Uint8Array(totalLength);\r\n    let offset = 0;\r\n    \r\n    // \u6309\u987A\u5E8F\u62FC\u63A5\u6240\u6709\u97F3\u9891\u6BB5\r\n    audioSegments.forEach(segment => {\r\n      mergedAudio.set(segment.audio, offset);\r\n      offset += segment.audio.length;\r\n    });\r\n    \r\n    console.log(`\u6700\u7EC8\u5408\u5E76\u97F3\u9891\u957F\u5EA6: ${mergedAudio.length} \u5B57\u8282`);\r\n    \r\n    // \u8FD4\u56DE\u5408\u5E76\u540E\u7684\u97F3\u9891\r\n    return new Response(mergedAudio, {\r\n      headers: {\r\n        ...corsHeaders,\r\n        'Content-Type': 'audio/mp3',\r\n        'Cache-Control': 'public, max-age=86400'\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error(\"TTS\u5BF9\u8BDD\u9519\u8BEF:\", error);\r\n    console.error(\"\u9519\u8BEF\u6808:\", error.stack);\r\n    \r\n    return new Response(JSON.stringify({\r\n      error: error.message || \"\u5904\u7406\u5BF9\u8BDD\u65F6\u53D1\u751F\u9519\u8BEF\",\r\n      stack: error.stack\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        ...corsHeaders,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Handle OPTIONS requests for CORS\r\nexport async function onRequestOptions() {\r\n  return new Response(null, {\r\n    status: 204,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n      'Access-Control-Max-Age': '86400'\r\n    }\r\n  });\r\n}\r\n\r\n// Function to map frontend voice names to MiniMax voice IDs\r\nfunction getMiniMaxVoiceId(frontendVoice) {\r\n  // Default voice if none provided\r\n  if (!frontendVoice) return \"male-qn-jingying\";\r\n  \r\n  // Complete voice mapping from frontend names to MiniMax API voice IDs\r\n  const voiceMap = {\r\n    // Chinese Mandarin voices\r\n    \"male-qn-qingse\": \"male-qn-qingse\",                 // \u9752\u6DA9\u9752\u5E74\u97F3\u8272\r\n    \"male-qn-jingying\": \"male-qn-jingying\",             // \u7CBE\u82F1\u9752\u5E74\u97F3\u8272\r\n    \"male-qn-badao\": \"male-qn-badao\",                   // \u9738\u9053\u9752\u5E74\u97F3\u8272\r\n    \"female-shaonv\": \"female-shaonv\",                   // \u5C11\u5973\u97F3\u8272\r\n    \"female-yujie\": \"female-yujie\",                     // \u5FA1\u59D0\u97F3\u8272\r\n    \"female-chengshu\": \"female-chengshu\",               // \u6210\u719F\u5973\u6027\u97F3\u8272\r\n    \"female-tianmei\": \"female-tianmei\",                 // \u751C\u7F8E\u5973\u6027\u97F3\u8272\r\n    \"presenter_male\": \"presenter_male\",                 // \u7537\u6027\u4E3B\u6301\u4EBA\r\n    \"presenter_female\": \"presenter_female\",             // \u5973\u6027\u4E3B\u6301\u4EBA\r\n    \"audiobook_male_1\": \"audiobook_male_1\",             // \u7537\u6027\u6709\u58F0\u4E661\r\n    \"audiobook_male_2\": \"audiobook_male_2\",             // \u7537\u6027\u6709\u58F0\u4E662\r\n    \"audiobook_female_1\": \"audiobook_female_1\",         // \u5973\u6027\u6709\u58F0\u4E661\r\n    \"audiobook_female_2\": \"audiobook_female_2\",         // \u5973\u6027\u6709\u58F0\u4E662\r\n    \"clever_boy\": \"clever_boy\",                         // \u806A\u660E\u7537\u7AE5\r\n    \"cute_boy\": \"cute_boy\",                             // \u53EF\u7231\u7537\u7AE5\r\n    \"lovely_girl\": \"lovely_girl\",                       // \u840C\u840C\u5973\u7AE5\r\n    \"junlang_nanyou\": \"junlang_nanyou\",                 // \u4FCA\u6717\u7537\u53CB\r\n    \"chunzhen_xuedi\": \"chunzhen_xuedi\",                 // \u7EAF\u771F\u5B66\u5F1F\r\n    \"qiaopi_mengmei\": \"qiaopi_mengmei\",                 // \u4FCF\u76AE\u840C\u59B9\r\n    \r\n    // English voices\r\n    \"Santa_Claus\": \"Santa_Claus\",                       // Santa Claus\r\n    \"Grinch\": \"Grinch\",                                 // Grinch\r\n    \"Rudolph\": \"Rudolph\",                               // Rudolph\r\n    \"Arnold\": \"Arnold\",                                 // Arnold\r\n    \"Charming_Santa\": \"Charming_Santa\",                 // Charming Santa\r\n    \"Charming_Lady\": \"Charming_Lady\",                   // Charming Lady\r\n    \"Sweet_Girl\": \"Sweet_Girl\",                         // Sweet Girl\r\n    \"Cute_Elf\": \"Cute_Elf\",                             // Cute Elf\r\n    \"Attractive_Girl\": \"Attractive_Girl\",               // Attractive Girl\r\n    \"Serene_Woman\": \"Serene_Woman\",                     // Serene Woman\r\n    \r\n    // Chinese Mandarin voices (alternative labeling)\r\n    \"Chinese (Mandarin)_News_Anchor\": \"Chinese (Mandarin)_News_Anchor\",                   // \u65B0\u95FB\u5973\u58F0\r\n    \"Chinese (Mandarin)_Refreshing_Young_Man\": \"Chinese (Mandarin)_Refreshing_Young_Man\", // \u8212\u6717\u7537\u58F0\r\n    \"Chinese (Mandarin)_Unrestrained_Young_Man\": \"Chinese (Mandarin)_Unrestrained_Young_Man\", // \u4E0D\u7F81\u9752\u5E74\r\n    \"Chinese (Mandarin)_Kind-hearted_Antie\": \"Chinese (Mandarin)_Kind-hearted_Antie\",     // \u70ED\u5FC3\u5927\u5A76\r\n    \"Chinese (Mandarin)_Gentleman\": \"Chinese (Mandarin)_Gentleman\",                       // \u6E29\u6DA6\u7537\u58F0\r\n    \"Chinese (Mandarin)_Male_Announcer\": \"Chinese (Mandarin)_Male_Announcer\",             // \u64AD\u62A5\u7537\u58F0\r\n    \"Chinese (Mandarin)_Sweet_Lady\": \"Chinese (Mandarin)_Sweet_Lady\",                     // \u751C\u7F8E\u5973\u58F0\r\n    \"Chinese (Mandarin)_Wise_Women\": \"Chinese (Mandarin)_Wise_Women\",                     // \u9605\u5386\u59D0\u59D0\r\n    \"Chinese (Mandarin)_Gentle_Youth\": \"Chinese (Mandarin)_Gentle_Youth\",                 // \u6E29\u6DA6\u9752\u5E74\r\n    \"Chinese (Mandarin)_Warm_Girl\": \"Chinese (Mandarin)_Warm_Girl\",                       // \u6E29\u6696\u5C11\u5973\r\n    \"Chinese (Mandarin)_Kind-hearted_Elder\": \"Chinese (Mandarin)_Kind-hearted_Elder\",     // \u82B1\u7532\u5976\u5976\r\n    \"Chinese (Mandarin)_Radio_Host\": \"Chinese (Mandarin)_Radio_Host\",                     // \u7535\u53F0\u7537\u4E3B\u64AD\r\n    \"Chinese (Mandarin)_Lyrical_Voice\": \"Chinese (Mandarin)_Lyrical_Voice\",               // \u6292\u60C5\u7537\u58F0\r\n    \"Chinese (Mandarin)_Straightforward_Boy\": \"Chinese (Mandarin)_Straightforward_Boy\",   // \u7387\u771F\u5F1F\u5F1F\r\n    \"Chinese (Mandarin)_Sincere_Adult\": \"Chinese (Mandarin)_Sincere_Adult\",               // \u771F\u8BDA\u9752\u5E74\r\n    \"Chinese (Mandarin)_Gentle_Senior\": \"Chinese (Mandarin)_Gentle_Senior\",               // \u6E29\u67D4\u5B66\u59D0\r\n    \"Chinese (Mandarin)_Stubborn_Friend\": \"Chinese (Mandarin)_Stubborn_Friend\",           // \u5634\u786C\u7AF9\u9A6C\r\n    \"Chinese (Mandarin)_Crisp_Girl\": \"Chinese (Mandarin)_Crisp_Girl\",                     // \u6E05\u8106\u5C11\u5973\r\n    \"Chinese (Mandarin)_Pure-hearted_Boy\": \"Chinese (Mandarin)_Pure-hearted_Boy\",         // \u6E05\u6F88\u90BB\u5BB6\u5F1F\u5F1F\r\n    \r\n    // Cantonese voices\r\n    \"Cantonese_ProfessionalHost\uFF08F)\": \"Cantonese_ProfessionalHost\uFF08F)\",                   // \u4E13\u4E1A\u5973\u4E3B\u6301\r\n    \"Cantonese_ProfessionalHost\uFF08M)\": \"Cantonese_ProfessionalHost\uFF08M)\",                   // \u4E13\u4E1A\u7537\u4E3B\u6301\r\n    \"Cantonese_PlayfulMan\": \"Cantonese_PlayfulMan\",                                       // \u6D3B\u6CFC\u7537\u58F0\r\n    \"Cantonese_CuteGirl\": \"Cantonese_CuteGirl\",                                           // \u53EF\u7231\u5973\u5B69\r\n    \r\n    // English voices (alternative labeling)\r\n    \"English_Trustworthy_Man\": \"English_Trustworthy_Man\",           // Trustworthy Man\r\n    \"English_Graceful_Lady\": \"English_Graceful_Lady\",               // Graceful Lady\r\n    \"English_Aussie_Bloke\": \"English_Aussie_Bloke\",                 // Aussie Bloke\r\n    \"English_Gentle-voiced_man\": \"English_Gentle-voiced_man\",       // Gentle-voiced man\r\n    \r\n    // Backward compatibility with old naming\r\n    \"Chinese (Mandarin)_Elite_Young\": \"male-qn-jingying\",\r\n    \"Chinese (Mandarin)_College_Student\": \"male-qn-daxuesheng\",\r\n    \"Chinese (Mandarin)_Young_Girl\": \"female-shaonv\",\r\n    \"Chinese (Mandarin)_Mature_Woman\": \"female-chengshu\",\r\n    \"Chinese (Mandarin)_Sweet_Woman\": \"female-tianmei\",\r\n    \"Chinese (Mandarin)_Male_Presenter\": \"presenter_male\",\r\n    \"Chinese (Mandarin)_Female_Presenter\": \"presenter_female\",\r\n    \"Chinese (Mandarin)_Cute_Boy\": \"cute_boy\",\r\n    \"Chinese (Mandarin)_Lovely_Girl\": \"lovely_girl\",\r\n    \"Cantonese_Professional_Host_Female\": \"Cantonese_ProfessionalHost\uFF08F)\",\r\n    \"Cantonese_Professional_Host_Male\": \"Cantonese_ProfessionalHost\uFF08M)\",\r\n    \"English_Diligent_Man\": \"English_Diligent_Man\",\r\n    \"English_Gentle_Voiced_Man\": \"English_Gentle-voiced_man\",\r\n    \"English_UpsetGirl\": \"English_UpsetGirl\",\r\n    \"English_Wiselady\": \"English_Wiselady\"\r\n  };\r\n  \r\n  // Log the mapping operation\r\n  console.log(`Voice mapping: '${frontendVoice}' -> '${voiceMap[frontendVoice] || \"male-qn-jingying\"}'`);\r\n  \r\n  // Return mapped voice or default if mapping not found\r\n  return voiceMap[frontendVoice] || \"male-qn-jingying\";\r\n}\r\n\r\nexport const config = {\r\n  runtime: 'edge',\r\n  maxDuration: 60 // Set maximum duration to 60 seconds\r\n}; ", "// Catch-all middleware to handle missing endpoints\r\nexport async function onRequest(context) {\r\n  const { request, next } = context;\r\n  \r\n  try {\r\n    // Try to process the request with the next handler\r\n    return await next();\r\n  } catch (err) {\r\n    // If the request URL includes 'functions/api'\r\n    if (request.url.includes('/functions/api')) {\r\n      return new Response(JSON.stringify({\r\n        error: \"API endpoint not found or not accessible\",\r\n        message: \"The API endpoint you're trying to access doesn't exist or is not configured correctly.\",\r\n        url: request.url,\r\n        method: request.method,\r\n        troubleshooting_tips: [\r\n          \"Check that the API endpoint path is correct\",\r\n          \"Verify that the necessary Cloudflare Function is deployed\",\r\n          \"Make sure your function has the correct export for this HTTP method\"\r\n        ]\r\n      }), {\r\n        status: 404,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, DELETE\",\r\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n        }\r\n      });\r\n    }\r\n    \r\n    // For all other missing endpoints\r\n    return new Response(JSON.stringify({\r\n      error: \"Resource not found\",\r\n      url: request.url\r\n    }), {\r\n      status: 404,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n  }\r\n}", "// Middleware to handle response headers\r\nexport async function onRequest(context) {\r\n  const { request, next } = context;\r\n  \r\n  // Get the response from the next middleware or page\r\n  const response = await next();\r\n  \r\n  // Clone the response so we can modify headers\r\n  const newResponse = new Response(response.body, response);\r\n  \r\n  // Remove the problematic Speculation-Rules header that's causing 404 errors\r\n  // This is a temporary fix until the proper speculation endpoint is working\r\n  newResponse.headers.delete(\"Speculation-Rules\");\r\n  \r\n  // Add security headers\r\n  newResponse.headers.set(\"X-Content-Type-Options\", \"nosniff\");\r\n  newResponse.headers.set(\"X-Frame-Options\", \"DENY\");\r\n  newResponse.headers.set(\"X-XSS-Protection\", \"1; mode=block\");\r\n  \r\n  return newResponse;\r\n} ", "// Middleware to handle Cloudflare Page Rules and Speculation API\r\nexport async function onRequest(context) {\r\n  const { request, next } = context;\r\n  \r\n  // Check if this is a request to the speculation rules endpoint\r\n  if (new URL(request.url).pathname === '/cdn-cgi/speculation') {\r\n    // Return a proper response for the speculation rules with some actual useful rules\r\n    return new Response(JSON.stringify({\r\n      prefetch: [\r\n        {\r\n          source: \"document\",\r\n          where: {\r\n            and: [{ href_matches: \"/*\", relative_to: \"document\" }]\r\n          },\r\n          eagerness: \"conservative\"\r\n        }\r\n      ]\r\n    }), {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Cache-Control\": \"public, max-age=3600\",\r\n        \"Access-Control-Allow-Origin\": \"https://study-llm.me\"\r\n      }\r\n    });\r\n  }\r\n  \r\n  // For regular page requests, add the Speculation-Rules header pointing to our endpoint\r\n  const response = await next();\r\n  const newResponse = new Response(response.body, response);\r\n  \r\n  // Only add the header to HTML responses\r\n  const contentType = newResponse.headers.get('content-type') || '';\r\n  if (contentType.includes('text/html')) {\r\n    newResponse.headers.set('Speculation-Rules', '/cdn-cgi/speculation');\r\n  }\r\n  \r\n  return newResponse;\r\n}", "// Handle environment variable requests\nexport async function onRequest(context) {\n  const { request, env, params } = context;\n  \n  // Handle OPTIONS method for CORS preflight requests\n  if (request.method === 'OPTIONS') {\n    return new Response(null, {\n      status: 204,\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n        \"Access-Control-Max-Age\": \"86400\"\n      }\n    });\n  }\n  \n  // Extract the key from the URL path\n  const url = new URL(request.url);\n  const pathname = url.pathname;\n  const key = pathname.split('/').pop(); // Get the last part of the path\n  \n  // Only handle GET requests\n  if (request.method !== 'GET') {\n    return new Response(JSON.stringify({\n      error: \"Method not allowed\"\n    }), {\n      status: 405,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n      }\n    });\n  }\n  \n  try {\n    // Get the environment variable value\n    const envValue = env[key];\n    \n    if (envValue !== undefined) {\n      // Return the environment variable value\n      return new Response(JSON.stringify({\n        key,\n        value: envValue\n      }), {\n        status: 200,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n        }\n      });\n    } else {\n      // Environment variable not found\n      return new Response(JSON.stringify({\n        error: `Environment variable ${key} not found`\n      }), {\n        status: 404,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n        }\n      });\n    }\n  } catch (error) {\n    // Handle errors\n    console.error('Error getting environment variable:', error);\n    return new Response(JSON.stringify({\n      error: \"Failed to get environment variable\",\n      message: error.message\n    }), {\n      status: 500,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n      }\n    });\n  }\n}", "// Route handler for /api/glm to forward to /functions/api/chat-glm\r\n// Performance constants\r\nconst CACHE_TTL = 60 * 1000; // 1 minute cache\r\nconst REQUEST_TIMEOUT = 25000; // 25 seconds (adjusted to be within Cloudflare limits)\r\n\r\n// Simple in-memory cache for identical requests\r\nconst requestCache = new Map();\r\n\r\n// Simple request queue for rate limiting\r\nlet requestQueue = [];\r\nconst MAX_CONCURRENT_REQUESTS = 3;\r\n\r\n// Process queue synchronously\r\nfunction processQueue() {\r\n  if (requestQueue.length === 0) return;\r\n  \r\n  const activeRequests = requestQueue.filter(req => !req.completed && req.processing).length;\r\n  if (activeRequests >= MAX_CONCURRENT_REQUESTS) return;\r\n  \r\n  const nextRequest = requestQueue.find(req => !req.completed && !req.processing);\r\n  if (!nextRequest) return;\r\n  \r\n  nextRequest.processing = true;\r\n  // Process the request without awaiting in global scope\r\n  nextRequest.fn()\r\n    .then(result => {\r\n      nextRequest.result = result;\r\n      nextRequest.completed = true;\r\n      nextRequest.resolve(result);\r\n    })\r\n    .catch(error => {\r\n      nextRequest.error = error;\r\n      nextRequest.completed = true;\r\n      nextRequest.reject(error);\r\n    })\r\n    .finally(() => {\r\n      // Remove from queue\r\n      const index = requestQueue.indexOf(nextRequest);\r\n      if (index > -1) {\r\n        requestQueue.splice(index, 1);\r\n      }\r\n      // Process next item in queue\r\n      processQueue();\r\n    });\r\n}\r\n\r\nasync function queueRequest(requestFn) {\r\n  return new Promise((resolve, reject) => {\r\n    const queueItem = {\r\n      fn: requestFn,\r\n      processing: false,\r\n      completed: false,\r\n      result: null,\r\n      error: null,\r\n      resolve,\r\n      reject\r\n    };\r\n    \r\n    requestQueue.push(queueItem);\r\n    \r\n    // Start processing the queue\r\n    processQueue();\r\n  });\r\n}\r\n\r\n// Generate cache key from request body\r\nasync function generateCacheKey(request) {\r\n  try {\r\n    const body = await request.clone().json();\r\n    const prompt = body.prompt || '';\r\n    const messages = JSON.stringify(body.messages || []);\r\n    return `${prompt}:${messages}`;\r\n  } catch (e) {\r\n    // If we can't parse the body, return a unique key\r\n    return `unique-${Date.now()}-${Math.random()}`;\r\n  }\r\n}\r\n\r\nexport async function onRequest(context) {\r\n  const { request, env } = context;\r\n  const startTime = Date.now();\r\n  \r\n  // Handle OPTIONS method for CORS preflight requests\r\n  if (request.method === 'OPTIONS') {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n        \"Access-Control-Max-Age\": \"86400\"\r\n      }\r\n    });\r\n  }\r\n  \r\n  try {\r\n    // Generate cache key and check cache for identical non-streaming requests\r\n    const cacheKey = await generateCacheKey(request);\r\n    \r\n    // Check if this is a streaming request\r\n    const body = await request.clone().json();\r\n    const isStreaming = body.stream === true;\r\n    \r\n    if (!isStreaming && requestCache.has(cacheKey)) {\r\n      const cached = requestCache.get(cacheKey);\r\n      if (Date.now() - cached.timestamp < CACHE_TTL) {\r\n        console.log(`Cache hit for request: ${cacheKey}`);\r\n        \r\n        // Create response from cached data\r\n        const cachedResponse = new Response(JSON.stringify(cached.data), {\r\n          status: 200,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n            \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n          }\r\n        });\r\n        \r\n        // Log performance metrics\r\n        const responseTime = Date.now() - startTime;\r\n        console.log(`GLM route (cached) completed in ${responseTime}ms`);\r\n        \r\n        return cachedResponse;\r\n      } else {\r\n        requestCache.delete(cacheKey);\r\n      }\r\n    }\r\n    \r\n    // Create a new request to the functions/api/chat-glm endpoint\r\n    const url = new URL(request.url);\r\n    const newUrl = new URL(url);\r\n    newUrl.pathname = '/functions/api/chat-glm';\r\n    \r\n    // Create AbortController for timeout\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), REQUEST_TIMEOUT);\r\n    \r\n    try {\r\n      // Clone the request with the new URL and timeout\r\n      const newRequest = new Request(newUrl.toString(), {\r\n        method: request.method,\r\n        headers: request.headers,\r\n        body: request.body,\r\n        redirect: request.redirect,\r\n        signal: controller.signal\r\n      });\r\n      \r\n      // Forward the request through queue\r\n      const response = await queueRequest(async () => {\r\n        return await fetch(newRequest);\r\n      });\r\n      clearTimeout(timeoutId);\r\n      \r\n      // For non-streaming responses, cache the result\r\n      if (!isStreaming && response.ok) {\r\n        try {\r\n          const responseData = await response.clone().json();\r\n          requestCache.set(cacheKey, {\r\n            data: responseData,\r\n            timestamp: Date.now()\r\n          });\r\n          \r\n          // Clean up cache if it gets too large\r\n          if (requestCache.size > 100) {\r\n            const oldestKey = requestCache.keys().next().value;\r\n            requestCache.delete(oldestKey);\r\n          }\r\n        } catch (e) {\r\n          // If we can't parse the response as JSON, don't cache it\r\n          console.warn('Could not cache response: not valid JSON');\r\n        }\r\n      }\r\n      \r\n      // Add CORS headers\r\n      const newHeaders = new Headers(response.headers);\r\n      newHeaders.set(\"Access-Control-Allow-Origin\", \"https://study-llm.me\");\r\n      newHeaders.set(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS\");\r\n      newHeaders.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n      \r\n      // Log performance metrics\r\n      const responseTime = Date.now() - startTime;\r\n      console.log(`GLM route completed in ${responseTime}ms`);\r\n      \r\n      // Return the response\r\n      return new Response(response.body, {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        headers: newHeaders\r\n      });\r\n    } catch (fetchError) {\r\n      clearTimeout(timeoutId);\r\n      \r\n      if (fetchError.name === 'AbortError') {\r\n        console.error('GLM route request timeout');\r\n        return new Response(JSON.stringify({\r\n          error: \"GLM API Timeout\",\r\n          message: \"\u8BF7\u6C42\u5904\u7406\u65F6\u95F4\u8FC7\u957F\uFF0C\u8BF7\u5C1D\u8BD5\u4EE5\u4E0B\u89E3\u51B3\u65B9\u6848\uFF1A\",\r\n          suggestions: [\r\n            \"\u7B80\u5316\u95EE\u9898\uFF0C\u5206\u591A\u6B21\u8BE2\u95EE\",\r\n            \"\u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5\u72B6\u6001\",\r\n            \"\u7A0D\u540E\u91CD\u8BD5\uFF0C\u670D\u52A1\u5668\u53EF\u80FD\u7E41\u5FD9\",\r\n            \"\u5982\u679C\u95EE\u9898\u6301\u7EED\uFF0C\u8BF7\u8054\u7CFB\u7BA1\u7406\u5458\"\r\n          ],\r\n          error_code: \"TIMEOUT_524\"\r\n        }), {\r\n          status: 408,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n            \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n          }\r\n        });\r\n      }\r\n      \r\n      throw fetchError;\r\n    }\r\n  } catch (error) {\r\n    // Handle errors\r\n    console.error('Error in GLM route:', error);\r\n    return new Response(JSON.stringify({\r\n      error: \"Failed to forward GLM request\",\r\n      message: error.message,\r\n      troubleshooting_tips: [\r\n        \"Check that the GLM API endpoint is configured correctly\",\r\n        \"Verify that the Cloudflare Function is deployed\",\r\n        \"Check the network connection\",\r\n        \"Try again later if the service is temporarily unavailable\"\r\n      ]\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"https://study-llm.me\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  runtime: 'edge',\r\n  maxDuration: 180 // Set maximum duration to 180 seconds for longer GLM responses\r\n};", "// Route handler for /api/chat to forward to /functions/api/chat\r\nexport async function onRequest(context) {\r\n  const { request, env } = context;\r\n  \r\n  // Handle OPTIONS method for CORS preflight requests\r\n  if (request.method === 'OPTIONS') {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n        \"Access-Control-Max-Age\": \"86400\"\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Create a new request to the functions/api/chat endpoint\r\n  const url = new URL(request.url);\r\n  const newUrl = new URL(url);\r\n  newUrl.pathname = '/functions/api/chat';\r\n  \r\n  // Clone the request with the new URL\r\n  const newRequest = new Request(newUrl.toString(), {\r\n    method: request.method,\r\n    headers: request.headers,\r\n    body: request.body,\r\n    redirect: request.redirect,\r\n    signal: request.signal\r\n  });\r\n  \r\n  try {\r\n    // Forward the request\r\n    const response = await fetch(newRequest);\r\n    \r\n    // Add CORS headers\r\n    const newHeaders = new Headers(response.headers);\r\n    newHeaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\n    newHeaders.set(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS\");\r\n    newHeaders.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n    \r\n    // Return the response\r\n    return new Response(response.body, {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers: newHeaders\r\n    });\r\n  } catch (error) {\r\n    // Handle errors\r\n    return new Response(JSON.stringify({\r\n      error: \"Failed to forward request\",\r\n      message: error.message,\r\n      troubleshooting_tips: [\r\n        \"Check that the API endpoint is configured correctly\",\r\n        \"Verify that the Cloudflare Function is deployed\",\r\n        \"Check the network connection\"\r\n      ]\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  runtime: 'edge',\r\n  maxDuration: 180 // Set maximum duration to 60 seconds\r\n}; ", "// Route handler for /api/tts-dialog to forward to /functions/api/tts-dialog\r\nexport async function onRequest(context) {\r\n  const { request, env } = context;\r\n  \r\n  // Handle OPTIONS method for CORS preflight requests\r\n  if (request.method === 'OPTIONS') {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n        \"Access-Control-Max-Age\": \"86400\"\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Create a new request to the functions/api/tts-dialog endpoint\r\n  const url = new URL(request.url);\r\n  const newUrl = new URL(url);\r\n  newUrl.pathname = '/functions/api/tts-dialog';\r\n  \r\n  // Clone the request with the new URL\r\n  const newRequest = new Request(newUrl.toString(), {\r\n    method: request.method,\r\n    headers: request.headers,\r\n    body: request.body,\r\n    redirect: request.redirect,\r\n    signal: request.signal\r\n  });\r\n  \r\n  try {\r\n    // Forward the request\r\n    const response = await fetch(newRequest);\r\n    \r\n    // Add CORS headers\r\n    const newHeaders = new Headers(response.headers);\r\n    newHeaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\n    newHeaders.set(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS\");\r\n    newHeaders.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n    \r\n    // Return the response\r\n    return new Response(response.body, {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers: newHeaders\r\n    });\r\n  } catch (error) {\r\n    // Handle errors\r\n    return new Response(JSON.stringify({\r\n      error: \"Failed to forward request\",\r\n      message: error.message,\r\n      troubleshooting_tips: [\r\n        \"Check that the Dialog TTS API endpoint is configured correctly\",\r\n        \"Verify that the Cloudflare Function is deployed\",\r\n        \"Check the network connection\"\r\n      ]\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  runtime: 'edge',\r\n  maxDuration: 180 // Set maximum duration to 180 seconds for long dialogs\r\n}; ", "// Route handler for /api/tts to forward to /functions/api/tts\r\nexport async function onRequest(context) {\r\n  const { request, env } = context;\r\n  \r\n  // Handle OPTIONS method for CORS preflight requests\r\n  if (request.method === 'OPTIONS') {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n        \"Access-Control-Max-Age\": \"86400\"\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Create a new request to the functions/api/tts endpoint\r\n  const url = new URL(request.url);\r\n  const newUrl = new URL(url);\r\n  newUrl.pathname = '/functions/api/tts';\r\n  \r\n  // Clone the request with the new URL\r\n  const newRequest = new Request(newUrl.toString(), {\r\n    method: request.method,\r\n    headers: request.headers,\r\n    body: request.body,\r\n    redirect: request.redirect,\r\n    signal: request.signal\r\n  });\r\n  \r\n  try {\r\n    // Forward the request\r\n    const response = await fetch(newRequest);\r\n    \r\n    // Add CORS headers\r\n    const newHeaders = new Headers(response.headers);\r\n    newHeaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\n    newHeaders.set(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS\");\r\n    newHeaders.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n    \r\n    // Return the response\r\n    return new Response(response.body, {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers: newHeaders\r\n    });\r\n  } catch (error) {\r\n    // Handle errors\r\n    return new Response(JSON.stringify({\r\n      error: \"Failed to forward request\",\r\n      message: error.message,\r\n      troubleshooting_tips: [\r\n        \"Check that the TTS API endpoint is configured correctly\",\r\n        \"Verify that the Cloudflare Function is deployed\",\r\n        \"Check the network connection\"\r\n      ]\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  runtime: 'edge',\r\n  maxDuration: 60 // Set maximum duration to 60 seconds\r\n}; ", "// Handle Real User Monitoring (RUM) requests from Cloudflare\r\nexport async function onRequest(context) {\r\n  // Just return a simple success response\r\n  // In a real implementation, this would process analytics data\r\n  return new Response(JSON.stringify({\r\n    success: true,\r\n    message: \"RUM metrics received\"\r\n  }), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-store, no-cache\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type\"\r\n    }\r\n  });\r\n} ", "// Handle the Speculation-Rules API request\r\nexport async function onRequest(context) {\r\n  return new Response(JSON.stringify({\r\n    // Empty rules set to prevent 404 errors\r\n    prefetch: [{ source: \"list\", urls: [] }],\r\n    prerender: [{ source: \"list\", urls: [] }]\r\n  }), {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"public, max-age=3600\"\r\n    }\r\n  });\r\n} ", "/**\r\n * API Route Handler for various API endpoints\r\n */\r\n\r\nexport async function onRequest(context) {\r\n  const { request, env, params } = context;\r\n  const { pathname } = new URL(request.url);\r\n  \r\n  // Handle OPTIONS request for CORS\r\n  if (request.method === 'OPTIONS') {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n        'Access-Control-Max-Age': '86400',\r\n      },\r\n    });\r\n  }\r\n    // API endpoints routing\r\n  if (pathname.startsWith('/api/')) {\r\n    // Handle API routes\r\n    \r\n    // Environment variable API\r\n    if (pathname.startsWith('/api/env/')) {\r\n      // Forward the request to the env handler\r\n      return await import('./api/env.js')\r\n        .then(module => module.onRequest(context))\r\n        .catch(error => {\r\n          console.error('Error loading env module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading env module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n    // Edge TTS API\r\n    if (pathname === '/api/edge-tts') {\r\n      // Forward the request to the edge-tts handler\r\n      return await import('./api/edge-tts-route.js')\r\n        .then(module => module.onRequest(context))\r\n        .catch(error => {\r\n          console.error('Error loading edge-tts-route module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading worker-edge-tts module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n    // TTS API\r\n    if (pathname === '/api/tts') {\r\n      // Forward the request to the tts handler\r\n      return await import('./api/tts-route.js')\r\n        .then(module => module.onRequest(context))\r\n        .catch(error => {\r\n          console.error('Error loading tts-route module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading tts module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n    // Ark Image API\r\n    if (pathname === '/api/ark-image') {\r\n      // Forward the request to the ark-image handler\r\n      return await import('./api/ark-image-route.js')\r\n        .then(module => module.onRequest(context))\r\n        .catch(error => {\r\n          console.error('Error loading ark-image-route module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading ark-image module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n    // Chat API\r\n    if (pathname === '/api/chat') {\r\n      // Forward the request to the chat handler\r\n      return await import('./api/chat.js')\r\n        .then(module => module.onRequest(context))\r\n        .catch(error => {\r\n          console.error('Error loading chat module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading chat module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n    // GLM API\r\n    if (pathname === '/api/glm') {\r\n      // Forward the request to the glm handler\r\n      return await import('./api/glm-route.js')\r\n        .then(module => module.onRequest(context))\r\n        .catch(error => {\r\n          console.error('Error loading glm-route module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading glm module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n\r\n    \r\n    // Database Query API\r\n    if (pathname.startsWith('/api/db/query/')) {\r\n      const queryPath = pathname.replace('/api/db/query/', '');\r\n      \r\n      // Forward the request to the database query handler\r\n      return await import('./api/db-query.js')\r\n        .then(module => {\r\n          // Add queryPath to context\r\n          context.queryPath = queryPath;\r\n          return module.onRequest(context);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error loading db-query module:', error);\r\n          return new Response(JSON.stringify({ \r\n            success: false, \r\n            error: 'Internal server error loading db-query module' \r\n          }), {\r\n            status: 500,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n          });\r\n        });\r\n    }\r\n    \r\n\r\n    \r\n    // Handle unknown API endpoints\r\n    return new Response(JSON.stringify({ \r\n      success: false, \r\n      error: 'API endpoint not found' \r\n    }), {\r\n      status: 404,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n  \r\n  // For non-API routes, pass through to next handler\r\n  return context.next();\r\n}", "import { onRequest as __api_db__action___table__js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\db\\\\[action]\\\\[table].js\"\nimport { onRequest as __cdn_cgi_speculation_speculation_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\cdn-cgi\\\\speculation\\\\speculation.js\"\nimport { onRequestGet as __api_chat_js_onRequestGet } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\chat.js\"\nimport { onRequestOptions as __api_chat_js_onRequestOptions } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\chat.js\"\nimport { onRequestPost as __api_chat_js_onRequestPost } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\chat.js\"\nimport { onRequestGet as __api_chat_glm_js_onRequestGet } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\chat-glm.js\"\nimport { onRequestOptions as __api_chat_glm_js_onRequestOptions } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\chat-glm.js\"\nimport { onRequestPost as __api_chat_glm_js_onRequestPost } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\chat-glm.js\"\nimport { onRequestGet as __api_ninjas_js_onRequestGet } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\ninjas.js\"\nimport { onRequestOptions as __api_ninjas_js_onRequestOptions } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\ninjas.js\"\nimport { onRequestGet as __api_tts_js_onRequestGet } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts.js\"\nimport { onRequestOptions as __api_tts_js_onRequestOptions } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts.js\"\nimport { onRequestPost as __api_tts_js_onRequestPost } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts.js\"\nimport { onRequestOptions as __api_tts_dialog_js_onRequestOptions } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts-dialog.js\"\nimport { onRequestPost as __api_tts_dialog_js_onRequestPost } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts-dialog.js\"\nimport { onRequest as ___middleware_catch_all_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\_middleware\\\\catch_all.js\"\nimport { onRequest as ___middleware_headers_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\_middleware\\\\headers.js\"\nimport { onRequest as ___middleware_speculation_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\_middleware\\\\speculation.js\"\nimport { onRequest as __api_env_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\env.js\"\nimport { onRequest as __api_glm_route_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\glm-route.js\"\nimport { onRequest as __api_route_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\route.js\"\nimport { onRequest as __api_tts_dialog_route_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts-dialog-route.js\"\nimport { onRequest as __api_tts_route_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\tts-route.js\"\nimport { onRequest as __api_worker_glm_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\api\\\\worker-glm.js\"\nimport { onRequest as __cdn_cgi_rum_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\cdn-cgi\\\\rum.js\"\nimport { onRequest as __cdn_cgi_speculation_js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\cdn-cgi\\\\speculation.js\"\nimport { onRequest as ____path___js_onRequest } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\functions\\\\[[path]].js\"\n\nexport const routes = [\n    {\n      routePath: \"/api/db/:action/:table\",\n      mountPath: \"/api/db/:action\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_db__action___table__js_onRequest],\n    },\n  {\n      routePath: \"/cdn-cgi/speculation/speculation\",\n      mountPath: \"/cdn-cgi/speculation\",\n      method: \"\",\n      middlewares: [],\n      modules: [__cdn_cgi_speculation_speculation_js_onRequest],\n    },\n  {\n      routePath: \"/api/chat\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_chat_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/chat\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_chat_js_onRequestOptions],\n    },\n  {\n      routePath: \"/api/chat\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_chat_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/chat-glm\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_chat_glm_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/chat-glm\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_chat_glm_js_onRequestOptions],\n    },\n  {\n      routePath: \"/api/chat-glm\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_chat_glm_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/ninjas\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_ninjas_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/ninjas\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_ninjas_js_onRequestOptions],\n    },\n  {\n      routePath: \"/api/tts\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_tts_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/tts\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_tts_js_onRequestOptions],\n    },\n  {\n      routePath: \"/api/tts\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_tts_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/tts-dialog\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_tts_dialog_js_onRequestOptions],\n    },\n  {\n      routePath: \"/api/tts-dialog\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_tts_dialog_js_onRequestPost],\n    },\n  {\n      routePath: \"/_middleware/catch_all\",\n      mountPath: \"/_middleware\",\n      method: \"\",\n      middlewares: [],\n      modules: [___middleware_catch_all_js_onRequest],\n    },\n  {\n      routePath: \"/_middleware/headers\",\n      mountPath: \"/_middleware\",\n      method: \"\",\n      middlewares: [],\n      modules: [___middleware_headers_js_onRequest],\n    },\n  {\n      routePath: \"/_middleware/speculation\",\n      mountPath: \"/_middleware\",\n      method: \"\",\n      middlewares: [],\n      modules: [___middleware_speculation_js_onRequest],\n    },\n  {\n      routePath: \"/api/env\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_env_js_onRequest],\n    },\n  {\n      routePath: \"/api/glm-route\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_glm_route_js_onRequest],\n    },\n  {\n      routePath: \"/api/route\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_route_js_onRequest],\n    },\n  {\n      routePath: \"/api/tts-dialog-route\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_tts_dialog_route_js_onRequest],\n    },\n  {\n      routePath: \"/api/tts-route\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_tts_route_js_onRequest],\n    },\n  {\n      routePath: \"/api/worker-glm\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_worker_glm_js_onRequest],\n    },\n  {\n      routePath: \"/cdn-cgi/rum\",\n      mountPath: \"/cdn-cgi\",\n      method: \"\",\n      middlewares: [],\n      modules: [__cdn_cgi_rum_js_onRequest],\n    },\n  {\n      routePath: \"/cdn-cgi/speculation\",\n      mountPath: \"/cdn-cgi\",\n      method: \"\",\n      middlewares: [],\n      modules: [__cdn_cgi_speculation_js_onRequest],\n    },\n  {\n      routePath: \"/:path*\",\n      mountPath: \"/\",\n      method: \"\",\n      middlewares: [],\n      modules: [____path___js_onRequest],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\.wrangler\\\\tmp\\\\bundle-tgfqGr\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\45333\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\.wrangler\\\\tmp\\\\bundle-tgfqGr\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\Alex\\\\study-assist\\\\study-assist\\\\.wrangler\\\\tmp\\\\bundle-tgfqGr\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\45333\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\45333\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\45333\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\45333\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["url", "onRequest", "DS_URL", "responseTime", "onRequest", "onRequestPost", "onRequestOptions", "onRequestGet", "onRequestOptions", "onRequestGet", "onRequestPost", "onRequestOptions", "onRequestGet", "onRequestPost", "getMiniMaxVoiceId", "onRequestOptions", "onRequest", "onRequest", "onRequest", "init_speculation", "onRequest", "onRequest", "generateCacheKey", "requestCache", "CACHE_TTL", "REQUEST_TIMEOUT", "onRequest", "onRequest", "config", "onRequest", "onRequest", "onRequest", "init_speculation", "onRequest", "init_speculation", "onRequest", "onRequestGet", "onRequestOptions", "onRequestPost", "value", "_a", "result", "char", "prefix", "i"]
}
